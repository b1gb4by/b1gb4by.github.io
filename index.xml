<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A Life of Inquiry</title><link>https://example.com/</link><description>Recent content on A Life of Inquiry</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>KubeCon + CloudNativeCon Europe 2022 Recap</title><link>https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/</guid><description>&lt;img src="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/featured-image.webp" alt="Featured image of post KubeCon + CloudNativeCon Europe 2022 Recap" />&lt;h2 id="kubecon--cloudnativecon-とは">KubeCon + CloudNativeCon とは？&lt;/h2>
&lt;p>KubeCon + CloudNativeCon は、クラウドネイティブコンピューティングに関する最大のオープンソースカンファレンスになります.&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cncf.io/" target="_blank" rel="noopener"
>Cloud Native Computing Foundation (CNCF)&lt;/a> の主力のカンファレンスとして開催され、主要な OSS およびクラウドネイティブコミュニティが一同に集結して、 情報共有を行っています.&lt;/p>
&lt;p>先日は、スペインのバレンシアで 5/16 - 20 の 5 日間、開催されました. (前夜祭が 2 日間、本祭が 3 日間という感じ)&lt;/p>
&lt;h2 id="選んだセッションの背景">選んだセッションの背景&lt;/h2>
&lt;ul>
&lt;li>今回は、セキュリティ関連をメインに取り上げました
&lt;ul>
&lt;li>個人的に好きだから&lt;/li>
&lt;li>マネージドを使っている場合、意識することも少ないが、管理している場合は意識する必要があるため&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="興味を持ったセッション">興味を持ったセッション&lt;/h2>
&lt;h3 id="trampoline-pods-node-to-admin-privesc-built-into-popular-k8s-platforms">Trampoline Pods Node to Admin PrivEsc Built Into Popular K8s Platforms&lt;/h3>
&lt;p>&lt;img src="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/trampoline-pods.webp"
width="2264"
height="1272"
srcset="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/trampoline-pods_hub673ea7fd1fd27d733048be41ac0d118_63318_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/trampoline-pods_hub673ea7fd1fd27d733048be41ac0d118_63318_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="427px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kccnceu2022.sched.com/event/ytlb/trampoline-pods-node-to-admin-privesc-built-into-popular-k8s-platforms-yuval-avrahami-shaul-ben-hai-palo-alto-networks?iframe=no&amp;amp;w=100%25&amp;amp;sidebar=yes&amp;amp;bg=no" target="_blank" rel="noopener"
>概要&lt;/a>&lt;/li>
&lt;li>発表概要
&lt;ul>
&lt;li>&lt;code>Trampoline Pods&lt;/code> ついて&lt;/li>
&lt;li>マネージドクラウドなどにおける、&lt;code>Trampoline Pods&lt;/code>の調査結果の報告と、それに関する対策&lt;/li>
&lt;li>Cilium を用いたデモ&lt;/li>
&lt;li>&lt;code>rbac-police&lt;/code>について&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="trampoline-pods">Trampoline Pods&lt;/h4>
&lt;ul>
&lt;li>業務に必要な特権を持つが、特権を昇格させるための跳躍台として使われる可能性のあるポッドのことを指す
&lt;ul>
&lt;li>ノードが不正を行った場合、クラスタに対して壊滅的な攻撃を行い、場合によっては完全にクラスタを乗っ取ってしまうほど強力である&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="rbac-police">rbac-police&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/PaloAltoNetworks/rbac-police" target="_blank" rel="noopener"
>rbac-police&lt;/a> とは、Palo Alt oNetworks 社が開発しているツール&lt;/li>
&lt;li>Kubernetes クラスタ内の &lt;code>ServiceAccounts&lt;/code>、&lt;code>Pod&lt;/code>、&lt;code>Node&lt;/code> の RBAC パーミッションを取得し、Rego で記述されたポリシーを使って評価する&lt;/li>
&lt;li>デフォルトで 20 個のポリシーが定義されている
&lt;ul>
&lt;li>Rego で書かれたポリシーは&lt;a class="link" href="https://github.com/PaloAltoNetworks/rbac-police/tree/main/lib" target="_blank" rel="noopener"
>こちら&lt;/a>を見ると良い&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="所感">所感&lt;/h4>
&lt;ul>
&lt;li>マネージドクラウドで Kubernetes を使うのまずいのか？
&lt;ul>
&lt;li>そういうわけではない&lt;/li>
&lt;li>いくつかのプラットフォームでは、すでに強力な DS が削除されている
&lt;ul>
&lt;li>&lt;a class="link" href="https://security.googleblog.com/2022/05/privileged-pod-escalations-in.html" target="_blank" rel="noopener"
>Privileged pod escalations in Kubernetes and GKE&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>どう対策するべきなのか
&lt;ul>
&lt;li>Least-Privileged
&lt;ul>
&lt;li>&lt;code>namespace/resourceNames&lt;/code> に対するパーミッションのスコープを設定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Track the powerful permissions &amp;amp; pods in your cluster / project
&lt;ul>
&lt;li>要求内容を文書化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Isolate powerful pods from untrusted / publicly-exposed ones
&lt;ul>
&lt;li>Scheduling constraints: &lt;code>Taints&lt;/code> &amp;amp; &lt;code>Tolerations&lt;/code>, &lt;code>Node Affinity&lt;/code>, &lt;code>PodAntiAffinity&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Remove powerful DaemonSets
&lt;ul>
&lt;li>特権的な機能を &lt;code>non-DaemonSet&lt;/code>, &lt;code>controlPlane&lt;/code> に移動&lt;/li>
&lt;li>コアオブジェクトへの書き込み権限を最小化し、状態を &lt;code>CRDs&lt;/code>, &lt;code>ConfigMap&lt;/code> に格納&lt;/li>
&lt;li>すべてを捨てるか、何も捨てないかではな&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Restrain powerful permissions
&lt;ul>
&lt;li>OPA Gatekeeper などによる誤用の防止・検出&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>詳しい調査報告は、&lt;a class="link" href="https://www.paloaltonetworks.com/resources/whitepapers/kubernetes-privilege-escalation-excessive-permissions-in-popular-platforms" target="_blank" rel="noopener"
>こちら&lt;/a>で確認できる&lt;/li>
&lt;/ul>
&lt;h3 id="how-attackers-use-exposed-prometheus-server-to-exploit-kubernetes-clusters">How Attackers Use Exposed Prometheus Server to Exploit Kubernetes Clusters&lt;/h3>
&lt;p>&lt;img src="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/how-attackers-use-exposed-prometheus.webp"
width="2258"
height="1272"
srcset="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/how-attackers-use-exposed-prometheus_hud68206cb451fdec589ff4d312c95d211_73444_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/how-attackers-use-exposed-prometheus_hud68206cb451fdec589ff4d312c95d211_73444_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kccnceu2022.sched.com/event/ytmB/how-attackers-use-exposed-prometheus-server-to-exploit-kubernetes-clusters-david-de-torres-huerta-miguel-hernandez-sysdig?iframe=no&amp;amp;w=100%25&amp;amp;sidebar=yes&amp;amp;bg=no" target="_blank" rel="noopener"
>概要&lt;/a>&lt;/li>
&lt;li>発表概要
&lt;ul>
&lt;li>Kubernetes におけるフィンガープリント&lt;/li>
&lt;li>Kubernetes の野放しな部分
&lt;ul>
&lt;li>Kubernetes UI&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Prometheus の野放しな部分
&lt;ul>
&lt;li>Basic 認証の使用を許可 (推奨) しているが、デフォルトでは有効ではない点&lt;/li>
&lt;li>オープンエンドポイントをインターネットに公開する行為&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>実際にフィンガープリントを行うシナリオ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="なぜkubernetes-のフィンガープリントを気にするのか">なぜ、Kubernetes のフィンガープリントを気にするのか&lt;/h4>
&lt;ul>
&lt;li>攻撃をするにも、まずは侵入したいターゲットについて、できる限り多くの情報を収集する
&lt;ul>
&lt;li>クラスタ内のバージョン情報
&lt;ul>
&lt;li>CVE や脆弱性に対応することができ、それを利用することで悪用可能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>アプリケーション、ツール、アーキテクチャに関する情報
&lt;ul>
&lt;li>競合他社に利用可能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="所感-1">所感&lt;/h4>
&lt;ul>
&lt;li>兎にも角にも以下のことは大前提
&lt;ul>
&lt;li>&lt;a class="link" href="https://sysdig.com/learn-cloud-native/kubernetes-security/kubernetes-security-101/" target="_blank" rel="noopener"
>Kubernetes security best practices&lt;/a>に従おう&lt;/li>
&lt;li>Prometheus を使用してすべてを監視しようね&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Prometheus はメトリクスを収集するツールだけではないということを再認識
&lt;ul>
&lt;li>使う人間が攻撃者の場合、Prometheus を使いそれぞれのケースに応じた具テクニックを駆使する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>新たな脆弱性とは、常に戦い続けなければならない
&lt;ul>
&lt;li>また、インサイダーに対する対策も必要&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="securing-kubernetes-applications-by-crafting-custom-seccomp-profiles">Securing Kubernetes Applications by Crafting Custom Seccomp Profiles&lt;/h3>
&lt;p>&lt;img src="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/seccomp.webp"
width="2258"
height="1272"
srcset="https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/seccomp_hu87c5ec424f75d06a45d339dd2cb22788_61686_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubecon-cloudnativecon-europe-2022-recap/seccomp_hu87c5ec424f75d06a45d339dd2cb22788_61686_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kccnceu2022.sched.com/event/ytml/securing-kubernetes-applications-by-crafting-custom-seccomp-profiles-sascha-grunert-red-hat?iframe=no&amp;amp;w=100%25&amp;amp;sidebar=yes&amp;amp;bg=no" target="_blank" rel="noopener"
>概要&lt;/a>&lt;/li>
&lt;li>発表概要
&lt;ul>
&lt;li>Kubernetes における &lt;code>seccomp&lt;/code> についての簡単な歴史&lt;/li>
&lt;li>手作業でカスタム &lt;code>seccomp&lt;/code> プロファイルを作成する&lt;/li>
&lt;li>手動で行っていた作業を自動化する&lt;/li>
&lt;li>デフォルトでより安全な Kubernetes の明るい未来&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="seccomp-とは">seccomp とは&lt;/h4>
&lt;ul>
&lt;li>&lt;code>secure computing mode&lt;/code>の略&lt;/li>
&lt;li>Linux カーネル上でアプリケーションのサンドボックスメカニズムを提供するためのセキュアコンピューティングの機能
&lt;ul>
&lt;li>許可されたシステムコールのリストを制限することにより、アプリケーションのセキュリティを向上させることが可能&lt;/li>
&lt;li>システムコールルールにヒットした場合のさまざまなアクションをサポート&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Kubernetes にはかなり前に追加されている
&lt;ul>
&lt;li>&lt;code>containerd&lt;/code>,&lt;code>CRI-O&lt;/code>, &lt;code>docker (shim)&lt;/code> のようなコンテナランタイムによって選択されるデフォルトプロファイルをサポート&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="所感-2">所感&lt;/h4>
&lt;ul>
&lt;li>SeccompDefault を、Kubernetes v1.25.0 でベータ版を卒業させたい熱量を感じた
&lt;ul>
&lt;li>&lt;code>v1.24.0&lt;/code> のベータ版機能はデフォルトではもう有効になっていないため&lt;/li>
&lt;li>この機能を安定版へ移行することで、Kubernetes のセキュリティが向上する&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>手動で生成する手順などはやったことがないから、個人的にはいい勉強だった&lt;/li>
&lt;/ul>
&lt;h2 id="その他のセッション">その他のセッション&lt;/h2>
&lt;h3 id="secure-multi-user-hpc-jobs-in-kubernetes-with-kyverno">Secure Multi User HPC Jobs in Kubernetes with Kyverno&lt;/h3>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kccnceu2022.sched.com/event/ytws/lightning-talk-secure-multi-user-hpc-jobs-in-kubernetes-with-kyverno-trey-dockendorf-ohio-supercomputer-center?iframe=no" target="_blank" rel="noopener"
>概要&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="kyverno-とは">Kyverno とは&lt;/h4>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kyverno.io/" target="_blank" rel="noopener"
>Kyverno&lt;/a> は、ポリシーエンジンの一種&lt;/li>
&lt;li>OpenPolicyAgent との違い
&lt;ul>
&lt;li>Rego のような特別な言語を用いずにポリシーを定義できる
&lt;ul>
&lt;li>YAML での定義&lt;/li>
&lt;li>Kubernetes ネイティブなツールといえる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Go 初学者ロードマップ</title><link>https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/</guid><description>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/golang-beginner-loadmap.webp" alt="Featured image of post Go 初学者ロードマップ" />&lt;p>Go を初めて学ぶ方に向けて、ロードマップを作成してみました.&lt;/p>
&lt;p>これから学んでいく第一歩として、参考にしていただければと思います.&lt;/p>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>本ページは、筆者が全くの知見のない初学者が Go を学習し、利用していく上で必要な知識やスキルの習得方法を示したものです.&lt;/p>
&lt;p>そのため、本ページでは概要や用語の説明などは行いません.&lt;/p>
&lt;p>また、本ページの指針を全て達成することで Go の全てを網羅し、&lt;strong>完全に理解&lt;/strong>できる訳ではありません.&lt;/p>
&lt;p>必要な知識が必要な場合は個人で別途で調査、理解をする必要があることを予めご了承ください.&lt;/p>
&lt;h2 id="go-とは">Go とは？&lt;/h2>
&lt;p>Go は、2009 年、Google の Robert Griesemer、Robert &amp;ldquo;Rob&amp;rdquo; C. Pike、Kenneth Lane Thompson によって設計されました.&lt;/p>
&lt;p>Go は以下の特徴を持っています.&lt;/p>
&lt;ul>
&lt;li>静的型付け&lt;/li>
&lt;li>C 言語の伝統に則ったコンパイル言語&lt;/li>
&lt;li>メモリ安全性&lt;/li>
&lt;li>ガベージコレクション&lt;/li>
&lt;li>構造的型付け&lt;/li>
&lt;li>CSP スタイルの並行性&lt;/li>
&lt;li>etc&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="はじめの一歩を踏み出す">はじめの一歩を踏み出す&lt;/h2>
&lt;p>Go を学ぶ第一歩として、まずは言語の理解が必要になります.&lt;/p>
&lt;p>以下の 2 つの教材を使用して、学習するのが良いでしょう.&lt;/p>
&lt;h3 id="a-tour-of-go">A Tour of Go&lt;/h3>
&lt;p>&lt;a class="link" href="https://go-tour-jp.appspot.com/welcome/1" target="_blank" rel="noopener"
>A Tour of Go&lt;/a>は Go を初めてさわる人に向けて提供されている教材になります.&lt;/p>
&lt;p>日本語対応もされており、これ一つで Go 言語の機能の説明を一通り網羅しています.&lt;/p>
&lt;h3 id="gopher-道場">Gopher 道場&lt;/h3>
&lt;p>&lt;a class="link" href="https://gopherdojo.org/" target="_blank" rel="noopener"
>Gopher 道場&lt;/a>は、Go 体系的に学べます.&lt;/p>
&lt;p>また、Slack や GitHub 上なので質問なども行えるため、一人で勉強する場合も気軽に相談できます.&lt;/p>
&lt;p>「&lt;a class="link" href="https://gopherdojo.org/studyroom/" target="_blank" rel="noopener"
>自習室&lt;/a>」から、これまでの教材や動画が閲覧できるので、そちらを活用するのが良いかと思います.&lt;/p>
&lt;h2 id="go-を写経する">Go を写経する&lt;/h2>
&lt;p>言語の理解がある程度済んだら、次は実際に Go を「写経」してみましょう.&lt;/p>
&lt;p>「写経」とは、参考書や実際のコードをそのまま写すことです. 内容は変更せず、そのまま書き写しましょう.&lt;/p>
&lt;p>「写経」を行う事は、以下の理由で効果的に理解が深めることができます.&lt;/p>
&lt;ul>
&lt;li>書くことによる記憶の定着&lt;/li>
&lt;li>ミスした場所等のチェック
&lt;ul>
&lt;li>タイポや記法のミスなどを即時に判断できる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>実行結果の確認
&lt;ul>
&lt;li>自分の書いたコードにより、どのような結果を得ることができたのかを理解できる&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>「写経」を行う上で、いくつかのサイトをご紹介します.&lt;/p>
&lt;h3 id="go-by-example">Go by Example&lt;/h3>
&lt;p>&lt;a class="link" href="https://gobyexample.com/" target="_blank" rel="noopener"
>Go by Example&lt;/a> は、各場面でのサンプルコードが数多く紹介されています.&lt;/p>
&lt;p>サンプルコードも少なく、シンプルなものなので、コードを初めて読む方も理解しやすいと思います.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-by-example.webp"
width="950"
height="583"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-by-example_hu5b82a5cc318749d802c4282b8a441b9d_32116_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-by-example_hu5b82a5cc318749d802c4282b8a441b9d_32116_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="391px"
>&lt;/p>
&lt;h3 id="go-web-example">Go Web Example&lt;/h3>
&lt;p>&lt;a class="link" href="https://gowebexamples.com/" target="_blank" rel="noopener"
>Go Web Example&lt;/a> は、「Go by Example」と比べて、より実践的なコードを写経することができます.&lt;/p>
&lt;p>例えば、HTTP サーバの作成や、ルーティングなどが挙げられます.&lt;/p>
&lt;p>また、RDB の CRUD 処理なども学ぶことができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-web-example.webp"
width="1256"
height="423"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-web-example_hu2168cf5b156c89a300120f4c4a63f38f_37478_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-web-example_hu2168cf5b156c89a300120f4c4a63f38f_37478_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="296"
data-flex-basis="712px"
>&lt;/p>
&lt;h3 id="building-an-awesome-cli-app-in-go--oscon-2017">Building an Awesome CLI App in Go – OSCON 2017&lt;/h3>
&lt;p>&lt;a class="link" href="https://spf13.com/presentation/building-an-awesome-cli-app-in-go-oscon/" target="_blank" rel="noopener"
>こちら&lt;/a>のソースは少し古くはなりますが、Go を用いた CLI の作成を&lt;code>Cobra&lt;/code>と呼ばれるフレームワークを用いて行うことができます.&lt;/p>
&lt;p>近年では Go で書かれた CLI が数多くでてきてます.&lt;/p>
&lt;p>普段の開発で CLI の開発を行う機会は少ないかと思うので、挑戦してみると良いと思います.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-cli.webp"
width="1147"
height="458"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-cli_hua807e8f894f2c926eb114fa49f7d4bcf_45612_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/go-cli_hua807e8f894f2c926eb114fa49f7d4bcf_45612_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="250"
data-flex-basis="601px"
>&lt;/p>
&lt;h2 id="おすすめの書籍文献など">おすすめの書籍、文献など&lt;/h2>
&lt;p>ここでは、ロードマップにそって学習を行う上で著者自身がお薦めする書籍や、文献などを紹介します.&lt;/p>
&lt;h3 id="文献">文献&lt;/h3>
&lt;h4 id="effective-go">Effective Go&lt;/h4>
&lt;p>&lt;a class="link" href="https://go.dev/doc/effective_go" target="_blank" rel="noopener"
>Effective Go&lt;/a> は、Go コードを書くための Tips がまとめられています.&lt;/p>
&lt;p>こちらの文献を読む前に以下の文献も読んでおくと良いかと思います.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://go.dev/doc/code" target="_blank" rel="noopener"
>How to Write Go Code&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://go.dev/ref/spec" target="_blank" rel="noopener"
>The Go Programming Language Specification&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="go-code-review-comments">Go Code Review Comments&lt;/h4>
&lt;p>&lt;a class="link" href="https://github.com/golang/go/wiki/CodeReviewComments" target="_blank" rel="noopener"
>Go Code Review Comments&lt;/a> は、「Effective Go」の補足として見ると良いです.&lt;/p>
&lt;p>Go のコードをレビューする際の一般的なコメントがまとめられています.&lt;/p>
&lt;h3 id="書籍">書籍&lt;/h3>
&lt;h4 id="go-プログラミング実践入門-標準ライブラリでゼロから-web-アプリを作る">Go プログラミング実践入門 標準ライブラリでゼロから Web アプリを作る&lt;/h4>
&lt;ul>
&lt;li>Go をより実践的に使うためのポイントをわかりやすく説明しています&lt;/li>
&lt;li>しかし、Go についての基本理解を済ませてからの方が読みやすいです&lt;/li>
&lt;li>フレームワークに頼らず、Web の仕組みを理解し Go で実装できる点がおすすめです&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/Go%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80-%E6%A8%99%E6%BA%96%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%A7%E3%82%BC%E3%83%AD%E3%81%8B%E3%82%89Web%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B-impress-gear%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-Sheong-Chang-ebook/dp/B06XKPNVWV?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2R9LPEJ0N3VCH&amp;keywords=Go%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80+%E6%A8%99%E6%BA%96%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%A7%E3%82%BC%E3%83%AD%E3%81%8B%E3%82%89Web%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B&amp;qid=1652787039&amp;sprefix=go%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80+%E6%A8%99%E6%BA%96%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%A7%E3%82%BC%E3%83%AD%E3%81%8B%E3%82%89web%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B%2Caps%2C169&amp;sr=8-1&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=e4a6b159ffe261e4ac7cfb32944d9371&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B06XKPNVWV&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B06XKPNVWV" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="エキスパートたちの-go-言語">エキスパートたちの Go 言語&lt;/h4>
&lt;ul>
&lt;li>メルカリのエンジニアが各章ごとに個人で作成したライブラリを紹介しています&lt;/li>
&lt;li>Go でのアーキテクチャや設計思想などを考える際に参考になるかと思います&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E3%81%9F%E3%81%A1%E3%81%AEGo%E8%A8%80%E8%AA%9E-%E4%B8%80%E6%B5%81%E3%81%AE%E3%82%B3%E3%83%BC%E3%83%89%E3%81%8B%E3%82%89%E5%BF%9C%E7%94%A8%E5%8A%9B%E3%82%92%E5%AD%A6%E3%81%B6-Software-Design-plus-%E4%B8%8A%E7%94%B0-ebook/dp/B09P4PH63R?_encoding=UTF8&amp;qid=1652787085&amp;sr=8-1-spons&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=b661e2431b248354fade7418d454ad69&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B09P4PH63R&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B09P4PH63R" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="実用-go-言語-システム開発の現場で知っておきたいアドバイス">実用 Go 言語 ―システム開発の現場で知っておきたいアドバイス&lt;/h4>
&lt;ul>
&lt;li>Go の基本的な知識をインプットしてから読むことをお薦めします&lt;/li>
&lt;li>Go を実用的に使っていくためのベストプラクティスがまとまっている感じです&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E5%AE%9F%E7%94%A8-Go%E8%A8%80%E8%AA%9E-%E2%80%95%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E5%A0%B4%E3%81%A7%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%84%E3%82%A2%E3%83%89%E3%83%90%E3%82%A4%E3%82%B9-%E6%B8%8B%E5%B7%9D-%E3%82%88%E3%81%97%E3%81%8D/dp/4873119693?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=TZ1Y1YBXOOMG&amp;keywords=%E5%AE%9F%E7%94%A8go%E8%A8%80%E8%AA%9E+%E2%80%95%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E5%A0%B4%E3%81%A7%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%84%E3%82%A2%E3%83%89%E3%83%90%E3%82%A4%E3%82%B9&amp;qid=1652787116&amp;sprefix=%E5%AE%9F%E7%94%A8+go+%E8%A8%80%E8%AA%9E+%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E5%A0%B4%E3%81%A7%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%9F%E3%81%84%E3%82%A2%E3%83%89%E3%83%90%E3%82%A4%E3%82%B9%2Caps%2C166&amp;sr=8-1&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=a2143e643f723af5c83c2ec382ecf07d&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=4873119693&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=4873119693" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="go-言語による並行処理">Go 言語による並行処理&lt;/h4>
&lt;ul>
&lt;li>Go を使う上で非常に重要となる、並行処理、&lt;code>Goroutin&lt;/code>について丁寧に説明してくれています&lt;/li>
&lt;li>並行処理に関しては、Go 関係なく一般的な考えなども記載されているので、並行処理を知らない方でも読んで見ると良いと思います&lt;/li>
&lt;li>また、例も多いので理解する際のイメージもしやすいと思います&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/Go%E8%A8%80%E8%AA%9E%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%A6%E8%A1%8C%E5%87%A6%E7%90%86-Katherine-Cox-Buday/dp/4873118468?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=3PBZTNLTXEGW1&amp;keywords=go%E8%A8%80%E8%AA%9E%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%A6%E8%A1%8C%E5%87%A6%E7%90%86&amp;qid=1652787142&amp;sprefix=go+%E8%A8%80%E8%AA%9E%E3%81%AB%E3%82%88%E3%82%8B%E4%B8%A6%E8%A1%8C%E5%87%A6%E7%90%86%2Caps%2C266&amp;sr=8-1&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=1d41e49c1464163c2b0aea7f0a0c4f86&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=4873118468&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=4873118468" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="よくわかる-context-の使い方">よくわかる context の使い方&lt;/h4>
&lt;ul>
&lt;li>Go の標準パッケージ、&lt;code>context&lt;/code>パッケージについて詳細にかかれています&lt;/li>
&lt;li>初学者にとっては使い道がわからないことがですが、使いこなせるとかなり便利なパッケージになります&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://zenn.dev/hsaki/books/golang-context" target="_blank" rel="noopener"
>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/context.webp"
width="250"
height="350"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/context_hu398a54e5dfdc4c11f6049490dcab2a49_11164_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/context_hu398a54e5dfdc4c11f6049490dcab2a49_11164_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="71"
data-flex-basis="171px"
>&lt;/a>&lt;/p>
&lt;h4 id="go-での並行処理を徹底解剖">Go での並行処理を徹底解剖！&lt;/h4>
&lt;ul>
&lt;li>並行処理について網羅的・徹底的にまとめられている&lt;/li>
&lt;li>最初は並行処理は難易度が高いため、深く理解するのが難しいですが、本書でその問題が解決できるかもしれません&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://zenn.dev/hsaki/books/golang-concurrency" target="_blank" rel="noopener"
>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/goroutin.webp"
width="250"
height="350"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/goroutin_huc121e3a6688730c049b24d1fda9c03b6_11722_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/goroutin_huc121e3a6688730c049b24d1fda9c03b6_11722_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="71"
data-flex-basis="171px"
>&lt;/a>&lt;/p>
&lt;h3 id="e-learning">e-Learning&lt;/h3>
&lt;h4 id="gophercises">gophercises&lt;/h4>
&lt;p>&lt;img src="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/gophercises.webp"
width="1566"
height="570"
srcset="https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/gophercises_hueff16bbd698c15c65261513ec7d63ddf_51050_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/go-%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/gophercises_hueff16bbd698c15c65261513ec7d63ddf_51050_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="274"
data-flex-basis="659px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://gophercises.com/#signup" target="_blank" rel="noopener"
>gophercises&lt;/a>は、Go の基本から応用的なアプリケーションの実装までを動画で紹介しています.&lt;/p>
&lt;p>Go の基礎理解を一通り深めたあと、「何か試しに実装するものないかな？」と思った方は、このサイトを参考にサンプルコードを書いてみても良いでしょう.&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>Go の学習ロードマップを考えてまとめてみました.&lt;/p>
&lt;p>Go のみならず、プログラミング言語の学習に近道はありません.&lt;/p>
&lt;p>反復をくりかえし、少しづつ自分のものにしてきましょう.&lt;/p>
&lt;p>また、「Go を学んで終わり！」というわけでもなくその周辺の知識も有していく必要があります。&lt;/p>
&lt;p>@Alikhll さんの &lt;a class="link" href="https://github.com/Alikhll/golang-developer-roadmap/blob/master/i18n/ja-JP/ReadMe-ja-JP.md" target="_blank" rel="noopener"
>こちら&lt;/a>のロードマップなどを参考に、より知識の幅を広げていって貰えればと思います.&lt;/p></description></item><item><title>Kubernetes初学者ロードマップ</title><link>https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/</guid><description>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-beginner-loadmap.webp" alt="Featured image of post Kubernetes初学者ロードマップ" />&lt;p>Kubernetes を初めて学ぶ方に向けて、ロードマップを作成してみました.&lt;/p>
&lt;p>これから学んでいく第一歩として、参考にしていただければと思います.&lt;/p>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>本ページは、筆者が全くの知見のない初学者が Kubernetes を学習し、利用していく上で必要な知識やスキルの習得方法を示したものです.&lt;/p>
&lt;p>そのため、本ページでは概要や用語の説明などは行いません.&lt;/p>
&lt;p>また、本ページの指針を全て達成することで Kubernetes の全てを網羅し、&lt;strong>完全に理解&lt;/strong>できる訳ではありません.&lt;/p>
&lt;p>必要な知識が必要な場合は個人で別途で調査、理解をする必要があることを予めご了承ください.&lt;/p>
&lt;h2 id="そもそも-kubernetes-とは">そもそも Kubernetes とは？&lt;/h2>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-logo.webp"
width="798"
height="141"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-logo_hu7105e10d84999642bdea7d64acc0f208_8768_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-logo_hu7105e10d84999642bdea7d64acc0f208_8768_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="565"
data-flex-basis="1358px"
>&lt;/p>
&lt;h3 id="kubernetes-の読み方">Kubernetes の読み方&lt;/h3>
&lt;p>Kubernetes は、&lt;strong>クバネティス&lt;/strong>、&lt;strong>クバネテス&lt;/strong>、&lt;strong>クーべネティス&lt;/strong>と呼び方は様々ありますが、読み方は人それぞれです.&lt;/p>
&lt;p>また、&lt;code>K8s&lt;/code>と略されることもあります.&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;Kubernetes&amp;rdquo;(希: κυβερνήτης, koo-ber-nay'-tace, クベルネテス)は、ギリシャ語で&lt;strong>航海長&lt;/strong>または&lt;strong>水先案内人&lt;/strong>を意味し、サイバネティクス(人工頭脳学)の語源でもある&lt;/p>
&lt;p>引用: &lt;a class="link" href="https://ja.wikipedia.org/wiki/Kubernetes" target="_blank" rel="noopener"
>https://ja.wikipedia.org/wiki/Kubernetes&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="何をしているの">何をしているの？&lt;/h3>
&lt;p>Kubernetes は、コンテナをデプロイできる基盤となるソフトウェアであり、コンテナオーケストレーターの 1 つです.&lt;/p>
&lt;p>もともとは Google のコンテナ盤である Borg をベースにした OSS であり、2014 年 6 月にローンチされました.&lt;/p>
&lt;p>現在は &lt;a class="link" href="https://www.cncf.io/" target="_blank" rel="noopener"
>&lt;strong>Cloud Native Computing Foundation (CNCF)&lt;/strong>&lt;/a> によって管理されている GA Project の 1 つです.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>CNCF とは？&lt;/strong>&lt;/p>
&lt;p>CNCF は、Cloud Native なシステムを推進するために 2015 年に創設された Linux Foundation 傘下の非営利団体の 1 つです.&lt;/p>
&lt;/blockquote>
&lt;h2 id="学習ロードマップ">学習ロードマップ&lt;/h2>
&lt;p>本題の学習のロードマップについてですが、個人的には以下の通りに学習を進めて行くのが良いと考えています.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/loadmap.drawio.png"
width="1266"
height="204"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/loadmap.drawio_hudb23c679f95621418449dbb6784890e0_69222_480x0_resize_box_3.png 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/loadmap.drawio_hudb23c679f95621418449dbb6784890e0_69222_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="620"
data-flex-basis="1489px"
>&lt;/p>
&lt;h3 id="step1-コンテナの基礎理解">Step1. コンテナの基礎理解&lt;/h3>
&lt;p>Kubernetes を理解する上で、非常に密な関係性にあるのが&lt;strong>コンテナ&lt;/strong>です.&lt;/p>
&lt;p>まずは、コンテナについて理解を深めることが最重要になります. コンテナを理解している場合は、このステップはスキップしても良いでしょう.&lt;/p>
&lt;p>理解がないまま Kubernetes を理解を深めること困難です. まずは、コンテナの理解を深めしょう.&lt;/p>
&lt;p>コンテナと言っても、コンテナを動かすエンジンは複数種類あるので、まずは&lt;code>Docker&lt;/code>に焦点をあてて、学習を進めて行きます.&lt;/p>
&lt;h4 id="step1-を学ぶポイント">Step1 を学ぶポイント&lt;/h4>
&lt;ul>
&lt;li>コンテナとは何なのか？&lt;/li>
&lt;li>コンテナと仮想化の違いは？&lt;/li>
&lt;li>Dockerfile の記述方法&lt;/li>
&lt;li>Docker の操作方法
&lt;ul>
&lt;li>イメージのビルド&lt;/li>
&lt;li>イメージのプッシュ&lt;/li>
&lt;li>コンテナの起動&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="step2-kubernetes-の基礎理解">Step2. Kubernetes の基礎理解&lt;/h3>
&lt;p>コンテナの基礎を理解した後は、Kubernetes の基礎を理解していきます.&lt;/p>
&lt;p>Kubernetes を動かす前にまずは知識としてインプットしていくのが良いでしょう.&lt;/p>
&lt;h4 id="step2-を学ぶポイント">Step2 を学ぶポイント&lt;/h4>
&lt;ul>
&lt;li>Kubernetes で実現できること
&lt;ul>
&lt;li>また、それがなぜ必要とされているのか&lt;/li>
&lt;li>Kubernetes を使うメリット&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>API リソース群の理解&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code> の使用方法&lt;/li>
&lt;/ul>
&lt;h3 id="step3-kubernetes-の利用">Step3. Kubernetes の利用&lt;/h3>
&lt;p>コンテナや Kubernetes の基礎的な部分を理解した後は、実際に Kubernetes を触ってみましょう.&lt;/p>
&lt;p>実際に Kubernetes を動かして、体系的に学ぶようにすることで理解を深めていきます.&lt;/p>
&lt;p>Step1, Step2 でインプットした知識を、きちんとアウトプットしていくことで&lt;strong>ラーニングサイクル&lt;/strong>を回すようにしましょう.&lt;/p>
&lt;h4 id="step3-を学ぶポイント">Step3 を学ぶポイント&lt;/h4>
&lt;ul>
&lt;li>Kubernetes の一連の動作を試してみる
&lt;ul>
&lt;li>クラスターの作成&lt;/li>
&lt;li>アプリケーションの操作 (&lt;code>kubectl&lt;/code>での操作)
&lt;ul>
&lt;li>デプロイ&lt;/li>
&lt;li>探索&lt;/li>
&lt;li>公開&lt;/li>
&lt;li>スケーリング&lt;/li>
&lt;li>アップデート&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="step4-エコシステムの利用">Step4. エコシステムの利用&lt;/h3>
&lt;p>Kubernetes には多くのエコシステムが提供されています.&lt;/p>
&lt;p>エコシステムを活用することで、Kubernetes はより真価を発揮します.&lt;/p>
&lt;p>また、本番環境などで運用する際、CI/CD や監視、ログ収集、セキュリティなど考慮する点が多く存在します.&lt;/p>
&lt;p>エコシステムを利用することで、それらの課題を解決することができます.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>エコシステムとは？&lt;/strong>&lt;/p>
&lt;p>元々は生態系の用語であり、あるエリア(地域や空間など)の生命体が互いに依存しながら生態を維持する関係の様子を表します.
ここでは、Kubernetes を支えるツール群のことを指しています.&lt;/p>
&lt;/blockquote>
&lt;h4 id="step4-を学ぶポイント">Step4 を学ぶポイント&lt;/h4>
&lt;ul>
&lt;li>Kubernetes を運用する上でどのような点を考慮する必要があるのか&lt;/li>
&lt;li>どのようなエコシステムがあるのか&lt;/li>
&lt;/ul>
&lt;h3 id="step5-内部ツールの理解実装">Step5. 内部ツールの理解・実装&lt;/h3>
&lt;p>しかし、実際にマネージドクラウド(AWS, GCP, Azure など)で運用する場合、あまり気にする必要はありません.&lt;/p>
&lt;p>個人で Kubernetes のコントローラーなどを開発していきたい方は Step 5 に挑戦してみましょう.&lt;/p>
&lt;p>なお、Kubernetes 関連の周辺ツールは、Go 言語で書かれている事が多いです.&lt;/p>
&lt;p>Go 言語を初めて触る方は、後日記載予定の「Go 言語学習ロードマップ」をご覧いただければと思います.&lt;/p>
&lt;h4 id="step5-を学ぶポイント">Step5 を学ぶポイント&lt;/h4>
&lt;ul>
&lt;li>カスタムコントローラーの基礎の理解&lt;/li>
&lt;li>公開されているカスタムコントローラー群の理解&lt;/li>
&lt;li>カスタムコントローラーの実装、動作検証&lt;/li>
&lt;/ul>
&lt;h2 id="おすすめの書籍文献など">おすすめの書籍、文献など&lt;/h2>
&lt;p>ここでは、ロードマップにそって学習を行う上で著者自身がお薦めする書籍や、文献などを紹介します.&lt;/p>
&lt;h3 id="書籍">書籍&lt;/h3>
&lt;h4 id="仕組みと使い方がわかる-dockerkubernetes-のきほんのきほん">仕組みと使い方がわかる Docker＆Kubernetes のきほんのきほん&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step1&lt;/li>
&lt;li>Step2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>コンテナに初めて触れる方やバックエンドの技術に詳しくない方でも Linux の知識や、サーバの基礎なども併せて記載されているため読みやすいです&lt;/li>
&lt;li>イラストも多く、視覚的に知識をインプットすることができます&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E4%BB%95%E7%B5%84%E3%81%BF%E3%81%A8%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%8C%E3%82%8F%E3%81%8B%E3%82%8B-Docker%EF%BC%86Kubernetes%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93-Compass-Books%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E5%B0%8F%E7%AC%A0%E5%8E%9F-ebook/dp/B08T961HKP?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=3OZORHAGRHLNJ&amp;keywords=docker&amp;qid=1652509596&amp;refinements=p_72%3A2275269051&amp;rnid=2275267051&amp;s=digital-text&amp;sprefix=docker%2Cdigital-text%2C166&amp;sr=1-3&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=29136c59c8b11b9bb0449836fc8e286c&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B08T961HKP&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B08T961HKP" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="docker-コンテナ開発環境構築の基本">Docker コンテナ開発・環境構築の基本&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step1&lt;/li>
&lt;li>Step2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>コンテナを体系的に学ぶことができます&lt;/li>
&lt;li>コンテナを用いた CI/CD、アプリケーションの運用方法も基本から記載されています&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/gp/product/B0998CHJ9W?&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=50d67ea8029c01f16853feb26fa680a4&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B0998CHJ9W&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B0998CHJ9W" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="イラストでわかる-docker-と-kubernetes">イラストでわかる Docker と Kubernetes&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step1&lt;/li>
&lt;li>Step2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Docker や Kubernetes の知識を有していない場合はまずこれを読んだほうがイメージはつかみやすいかと思います
&lt;ul>
&lt;li>概要がメインなので、サラッと読むには良いと思います&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8BDocker%E3%81%A8Kubernetes-Software-Design-plus-%E5%BE%B3%E6%B0%B8-ebook/dp/B08PNMRXKN?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2UB37LVU06166&amp;keywords=docker&amp;qid=1652509151&amp;refinements=p_72%3A2275269051&amp;rnid=2275267051&amp;s=digital-text&amp;sprefix=docker%2Caps%2C260&amp;sr=1-12&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=73dfa47f75b0dd6e7da44853d73fffad&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B08PNMRXKN&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B08PNMRXKN" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="kubernetes-完全ガイド-第-2-版">Kubernetes 完全ガイド 第 2 版&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step2&lt;/li>
&lt;li>Step3&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>一番時初めにこの書籍から読み始めるのは少し難易度が高いため、上記の書籍を読んでから読むと良いです&lt;/li>
&lt;li>Kubernetes に関する知識が網羅的にまとめられています&lt;/li>
&lt;li>Kubernetes を使用していて、困った時にリファレンスとしても活用できます&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/Kubernetes%E5%AE%8C%E5%85%A8%E3%82%AC%E3%82%A4%E3%83%89-%E7%AC%AC2%E7%89%88-impress-top-gear%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-ebook/dp/B08FZX8PYW?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2UB37LVU06166&amp;keywords=docker&amp;qid=1652511302&amp;refinements=p_72%3A2275269051&amp;rnid=2275267051&amp;s=digital-text&amp;sprefix=docker%2Caps%2C260&amp;sr=1-23&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=241da7fc57eddf20dbf4a1e2f588ae03&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B08FZX8PYW&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B08FZX8PYW" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="kubernetes-cicd-パイプラインの実装">Kubernetes CI/CD パイプラインの実装&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>題名の通り、CI/CD のパイプラインを構築について詳細に記されている&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/Kubernetes-CD%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%AE%E5%AE%9F%E8%A3%85-impress-top-gear%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-ebook/dp/B09J7X39ZT?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2UB37LVU06166&amp;keywords=docker&amp;qid=1652509151&amp;refinements=p_72%3A2275269051&amp;rnid=2275267051&amp;s=digital-text&amp;sprefix=docker%2Caps%2C260&amp;sr=1-18&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=6724574a2882121a0f484f2c97d33646&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B09J7X39ZT&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B09J7X39ZT" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="dockerkubernetes-開発運用のためのセキュリティ実践ガイド">Docker/Kubernetes 開発・運用のためのセキュリティ実践ガイド&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step3&lt;/li>
&lt;li>Step4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Docker や Kubernetes の知識はある程度有していないと読むのは難しいと思います&lt;/li>
&lt;li>Kubernetes 上での開発、運用視点からのセキュリティ対策についてまとめられていています&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/Docker-Kubernetes%E9%96%8B%E7%99%BA%E3%83%BB%E9%81%8B%E7%94%A8%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E5%AE%9F%E8%B7%B5%E3%82%AC%E3%82%A4%E3%83%89-Compass-Books%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E9%A0%88%E7%94%B0-ebook/dp/B085C8LYDC?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2UB37LVU06166&amp;keywords=docker&amp;qid=1652509151&amp;refinements=p_72%3A2275269051&amp;rnid=2275267051&amp;s=digital-text&amp;sprefix=docker%2Caps%2C260&amp;sr=1-8&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=3e11a8f254e14f7d8f201c3703e7f9d7&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B085C8LYDC&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=B085C8LYDC" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="実践入門-kubernetes-カスタムコントローラーへの道">実践入門 Kubernetes カスタムコントローラーへの道&lt;/h4>
&lt;ul>
&lt;li>対象
&lt;ul>
&lt;li>Step5&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Kubernetes で拡張機能(カスタムコントローラー)を開発する入門です&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80-Kubernetes%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%BC%E3%81%B8%E3%81%AE%E9%81%93-%E6%8A%80%E8%A1%93%E3%81%AE%E6%B3%89%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA%EF%BC%88NextPublishing%EF%BC%89-%E7%A3%AF-%E8%B3%A2%E5%A4%A7/dp/4844378546?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;crid=2J9AWAYV9O5PE&amp;keywords=kubernetes&amp;qid=1652514210&amp;sprefix=kubernete%2Caps%2C177&amp;sr=8-15&amp;linkCode=li2&amp;tag=m0rer00e-22&amp;linkId=9a58d18c159b1c8ae59d0fefa64a2a16&amp;language=ja_JP&amp;ref_=as_li_ss_il" target="_blank">&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=4844378546&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=m0rer00e-22&amp;language=ja_JP" >&lt;/a>&lt;img src="https://ir-jp.amazon-adsystem.com/e/ir?t=m0rer00e-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=4844378546" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />&lt;/p>
&lt;h4 id="kubernetes-ネットワーク-徹底解説">Kubernetes ネットワーク 徹底解説&lt;/h4>
&lt;ul>
&lt;li>Kubernetes のネットワークの実現方法について説明されています&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://zenn.dev/taisho6339" target="_blank" rel="noopener"
>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-network.webp"
width="250"
height="350"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-network_hud85a280dae654ab31c568be9089e1d4e_12688_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/k8s-network_hud85a280dae654ab31c568be9089e1d4e_12688_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="71"
data-flex-basis="171px"
>&lt;/a>&lt;/p>
&lt;h3 id="e-learning">e-Learning&lt;/h3>
&lt;h4 id="katacoda">Katacoda&lt;/h4>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-logo.webp"
width="1929"
height="363"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-logo_hu17cde74a4961802c95ad7dcf7c82a69e_33890_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-logo_hu17cde74a4961802c95ad7dcf7c82a69e_33890_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="531"
data-flex-basis="1275px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.katacoda.com/" target="_blank" rel="noopener"
>Katakoda&lt;/a>は、ブラウザ環境で学習が行えるプラットフォームです.&lt;/p>
&lt;p>コンテナ周辺の技術などのトレーニングが公開されており、全てブラウザ環境でコマンド、ターミナル環境が提供されているため、環境構築などの手間などなく学習を行うことができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-preview.webp"
width="2690"
height="1562"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-preview_hu82e34ce7ce9fb815655c2fdea8710d2d_173650_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/katacoda-preview_hu82e34ce7ce9fb815655c2fdea8710d2d_173650_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="172"
data-flex-basis="413px"
>&lt;/p>
&lt;h4 id="kubernetes-学習とトレーニング-microsoft">Kubernetes 学習とトレーニング (Microsoft)&lt;/h4>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/ms-traing.webp"
width="2690"
height="926"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/ms-traing_huf19bc0b6a83e0f3756424533a1a12bf1_64200_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/ms-traing_huf19bc0b6a83e0f3756424533a1a12bf1_64200_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="290"
data-flex-basis="697px"
>&lt;/p>
&lt;p>Microsoft が提供している、トレーニングになります.&lt;/p>
&lt;p>動画ベースで各項目を説明しており、Kubernetes の基本を理解すると共に、様々な Kubernetes の機能などについても解説してくれています.&lt;/p>
&lt;p>トレーニングは、&lt;a class="link" href="https://azure.microsoft.com/ja-jp/resources/kubernetes-learning-and-training/#overview" target="_blank" rel="noopener"
>こちら&lt;/a>から受講することができます.&lt;/p>
&lt;h4 id="つくって学ぶ-kubebuilder">つくって学ぶ Kubebuilder&lt;/h4>
&lt;p>&lt;img src="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/kubebuilder.webp"
width="1263"
height="218"
srcset="https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/kubebuilder_hu5150391d9c0e842dedaa570fef006154_12894_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/kubernetes%E5%88%9D%E5%AD%A6%E8%80%85%E3%83%AD%E3%83%BC%E3%83%89%E3%83%9E%E3%83%83%E3%83%97/kubebuilder_hu5150391d9c0e842dedaa570fef006154_12894_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="579"
data-flex-basis="1390px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/zoetrope?tab=repositories" target="_blank" rel="noopener"
>@zoetrope&lt;/a>さんによって提供されており、Kubebuilder と呼ばれるフレームワークを使用して、Kubernetes を拡張するためのカスタムコントローラー/オペレーターを開発するため方法を解説されています.&lt;/p>
&lt;p>Step5 に進まれた方は、この記事を読んでカスタムコントローラー/オペレーターの開発手法を理解すると良いでしょう.&lt;/p>
&lt;h2 id="その他">その他&lt;/h2>
&lt;h3 id="情報収集">情報収集&lt;/h3>
&lt;p>Kubernetes の情報を収集する際には基本的には以下を使用しています.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kubernetes.io/" target="_blank" rel="noopener"
>Kubernetes Official&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/home/" target="_blank" rel="noopener"
>Document&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/reference/" target="_blank" rel="noopener"
>Reference&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kubernetes.io/blog/" target="_blank" rel="noopener"
>Blog&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/kubernetes" target="_blank" rel="noopener"
>GitHub&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener"
>kubernetes/kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>News
&lt;ul>
&lt;li>&lt;a class="link" href="https://us10.campaign-archive.com/home/?u=3885586f8f1175194017967d6&amp;amp;id=11c1b8bcb2" target="_blank" rel="noopener"
>KubeWeekly&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://kubernetespodcast.com/" target="_blank" rel="noopener"
>Kubernetes Podcast&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://medium.com/tag/kubernetes/latest" target="_blank" rel="noopener"
>Kubernetes on Medium&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="コミュニティの参加">コミュニティの参加&lt;/h3>
&lt;h4 id="kubernetes-slack">Kubernetes Slack&lt;/h4>
&lt;p>Kubernetes の Slack になります. Join は&lt;a class="link" href="http://slack.k8s.io/" target="_blank" rel="noopener"
>こちら&lt;/a>からできます.&lt;/p>
&lt;p>※ 既に Join 済みの場合は、&lt;a class="link" href="https://kubernetes.slack.com/" target="_blank" rel="noopener"
>こちら&lt;/a>からサインインできます.&lt;/p>
&lt;p>初めて参加する方は以下のチャンネルに参加すると良いと思います.&lt;/p>
&lt;ul>
&lt;li>&lt;code>#jp-users&lt;/code>&lt;/li>
&lt;li>&lt;code>jp-events&lt;/code>&lt;/li>
&lt;li>&lt;code>jp-dev&lt;/code>&lt;/li>
&lt;li>&lt;code>kubernetes-doc-ja&lt;/code>&lt;/li>
&lt;li>&lt;code>jp-mentoring&lt;/code>&lt;/li>
&lt;li>&lt;code>jp-users-novice&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>初学者の方で質問などを行いたい場合は、&lt;code>jp-users-novice&lt;/code>で聞いてみると良いでしょう.&lt;/p>
&lt;h3 id="勉強会など">勉強会など&lt;/h3>
&lt;h4 id="kubernetes-meetup-tokyohttpsk8sjpconnpasscom">&lt;a class="link" href="https://k8sjp.connpass.com/" target="_blank" rel="noopener"
>Kubernetes Meetup Tokyo&lt;/a>&lt;/h4>
&lt;p>国内では最大の Kubernetes の勉強会になります.&lt;/p>
&lt;p>過去の勉強会の動画は&lt;a class="link" href="https://www.youtube.com/c/KubernetesMeetupTokyo" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h4 id="kubernetes-meetup-novicehttpsk8s-novice-jpconnpasscom">&lt;a class="link" href="https://k8s-novice-jp.connpass.com/" target="_blank" rel="noopener"
>Kubernetes Meetup Novice&lt;/a>&lt;/h4>
&lt;p>「まだ、学び始めたばっかりだけど発表してみたい」という方向けの勉強会になります.&lt;/p>
&lt;p>過去の勉強会の動画は&lt;a class="link" href="https://www.youtube.com/channel/UC4EPkXFGaMA_BZ0N6unnQIAz" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h4 id="kubernetes-変更内容共有会httpskubernetes-updatesconnpasscom">&lt;a class="link" href="https://kubernetes-updates.connpass.com/" target="_blank" rel="noopener"
>Kubernetes 変更内容共有会&lt;/a>&lt;/h4>
&lt;p>Kubernetes のバージョンアップごとの変更内容で重要な部分や、面白いポイントを紹介してくれる勉強会になります.&lt;/p>
&lt;p>Kubernetes のバージョンに追従してくためにこちらの勉強会を活用してみても良いと思います.&lt;/p>
&lt;p>過去の勉強会の動画は&lt;a class="link" href="https://www.youtube.com/channel/UC9bxCiEy9Nocy5UQHfG_6Yw" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h4 id="kubernetes-internal">Kubernetes Internal&lt;/h4>
&lt;p>Kubernetes をより深く掘り下げ、その他の周辺ツールなどの実装や設計などについて情報交換、交流をするための勉強会です.&lt;/p>
&lt;p>現在は、「kubenews」が毎週開催されています.&lt;/p>
&lt;p>過去の勉強会の動画は&lt;a class="link" href="https://www.youtube.com/channel/UCpkd51NdxThtTSR3L6T83fw" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h4 id="ochaoracle-cloud-hangout-cafe-cafehttpsochacafeconnpasscom">&lt;a class="link" href="https://ochacafe.connpass.com/" target="_blank" rel="noopener"
>OCHa(Oracle Cloud Hangout cafe) Cafe&lt;/a>&lt;/h4>
&lt;p>Kubernetes 以外にクラウドネイティブな技術全般について発信しています.&lt;/p>
&lt;p>過去の勉強会の動画は&lt;a class="link" href="https://www.youtube.com/c/JapanOracleDevelopers" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h4 id="kubeconn--cloudnativeconnhttpswwwcncfiokubecon-cloudnativecon-events">&lt;a class="link" href="https://www.cncf.io/kubecon-cloudnativecon-events/" target="_blank" rel="noopener"
>KubeConn + CloudNativeConn&lt;/a>&lt;/h4>
&lt;p>KubeCon + CloudNativeCon は、Cloud Native Computing Foundation (CNCF) の主力カンファレンスカンファレンスとして開催されています.&lt;/p>
&lt;p>Kubernetes のみならず、クラウドネイティブに関するコミュニティが一同に集結し、クラウドネイティブな技術の教育と進歩を推進しています.&lt;/p>
&lt;h4 id="cloud-native-dayshttpscloudnativedaysconnpasscom">&lt;a class="link" href="https://cloudnativedays.connpass.com/" target="_blank" rel="noopener"
>Cloud Native Days&lt;/a>&lt;/h4>
&lt;p>日本最大級のクラウドネイティブ・テックカンファレンスを開催しています.&lt;/p>
&lt;p>過去のカンファレンスの動画は&lt;a class="link" href="https://www.youtube.com/channel/UCMBw1Z3fmhe-2l-iq2p4rNw" target="_blank" rel="noopener"
>こちら&lt;/a>から見ることができます.&lt;/p>
&lt;h3 id="資格">資格&lt;/h3>
&lt;p>Kubernetes では、Linux Foundation と Cloud Native Computing Foundation (CNCF) が行っている試験が一番有名だと思います.&lt;/p>
&lt;h4 id="cka-certified-kubernetes-administratorhttpstraininglinuxfoundationorgjacertificationcertified-kubernetes-administrator-cka">&lt;a class="link" href="https://training.linuxfoundation.org/ja/certification/certified-kubernetes-administrator-cka/" target="_blank" rel="noopener"
>CKA (Certified Kubernetes Administrator)&lt;/a>&lt;/h4>
&lt;p>Kubernetes の基本的な機能に加え、基盤自体の運用方法やトラブルシュートなどの理解が求められます.&lt;/p>
&lt;p>Kubernetes の基盤開発者向けの試験になります.&lt;/p>
&lt;p>※ &lt;a class="link" href="https://training.linuxfoundation.org/ja/certification/certified-kubernetes-administrator-cka-jp/" target="_blank" rel="noopener"
>日本語での試験&lt;/a>が可能です.&lt;/p>
&lt;h4 id="ckad-certified-kubernetes-application-developerhttpstraininglinuxfoundationorgjacertificationcertified-kubernetes-application-developer-ckad">&lt;a class="link" href="https://training.linuxfoundation.org/ja/certification/certified-kubernetes-application-developer-ckad/" target="_blank" rel="noopener"
>CKAD (Certified Kubernetes Application Developer)&lt;/a>&lt;/h4>
&lt;p>CKA と比べ、アプリケーション開発者向けの試験になります.&lt;/p>
&lt;p>Kubernetes の基本的な機能に加え、Kubernetes をアプリをデプロイ・運用する基盤として十分に利用できるスキルがあるかが求められます.&lt;/p>
&lt;p>※ &lt;a class="link" href="https://training.linuxfoundation.org/ja/certification/certified-kubernetes-application-developer-ckad-jp/" target="_blank" rel="noopener"
>日本語での試験&lt;/a>が可能です.&lt;/p>
&lt;h4 id="cks-certified-kubernetes-security-specialisthttpstraininglinuxfoundationorgjacertificationcertified-kubernetes-security-specialist">&lt;a class="link" href="https://training.linuxfoundation.org/ja/certification/certified-kubernetes-security-specialist/" target="_blank" rel="noopener"
>CKS (Certified Kubernetes Security Specialist)&lt;/a>&lt;/h4>
&lt;p>CKA の試験を更にセキュリティに焦点を当てた試験となります.&lt;/p>
&lt;p>この試験を受けるには、事前に CKA に合格している必要があります.&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>今回は、Kubernetes の学習ロードマップを考えてまとめてみました.&lt;/p>
&lt;p>筆者自身も Kubernetes を触り始めてまだ日が浅いため、上記のものを参考に日々精進しています.&lt;/p>
&lt;p>これをきっかけに一人でも多くの方が Kubernetes に興味をもっていただけることを切に願います.&lt;/p></description></item><item><title>MXLinux で Rancher Desktop を動かす</title><link>https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</link><pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate><guid>https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/</guid><description>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/featured-image.webp" alt="Featured image of post MXLinux で Rancher Desktop を動かす" />&lt;p>1 月 26 日に、&lt;a class="link" href="https://rancherdesktop.io/" target="_blank" rel="noopener"
>Rancher Desktop&lt;/a> が正式に &lt;a class="link" href="https://github.com/rancher-sandbox/rancher-desktop/releases/tag/v1.0.0" target="_blank" rel="noopener"
>v1.0.0&lt;/a> としてリリースされました.&lt;/p>
&lt;p>今回は、実際に Rancher Desktop を MXLinux にインストールして動かそうと思います.&lt;/p>
&lt;h2 id="rancher-desktop-とは">Rancher Desktop とは&lt;/h2>
&lt;p>Rancher Desktop は Electron と Node.js をベースに構築されたデスクトップアプリケーションであり、デスクトップ上で Kubernetes とコンテナ管理を実行することができます.&lt;/p>
&lt;p>また、実行する Kubernetes のバージョンを自由に選択することができます.&lt;/p>
&lt;p>&lt;code>containerd&lt;/code>、または&lt;code>Moby (dockerd)&lt;/code>を使って、コンテナイメージのビルド、プッシュ、プル、実行が可能です. ビルドしたコンテナイメージは、レジストリを必要とせず、すぐに Kubernetes で実行できます.&lt;/p>
&lt;h2 id="必要条件">必要条件&lt;/h2>
&lt;p>OSS のデスクトップアプリケーションで、macOS や Windows、そして Linux の様々な環境で動作させることができます. M1 にも対応しているため、ほとんどの環境で動作が可能になりました.&lt;/p>
&lt;p>環境での必要条件は以下の通りです.&lt;/p>
&lt;h3 id="macos">macOS&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>macOS&lt;/strong>
&lt;ul>
&lt;li>Catalina 10.15 以降&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>CPU アーキテクチャ&lt;/strong>
&lt;ul>
&lt;li>Apple Silicon（M1）または VT-x 搭載の Intel CPU&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="windowsos">WindowsOS&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Windows&lt;/strong>
&lt;ul>
&lt;li>Windows 10 ビルド 1909 以降&lt;/li>
&lt;li>Home エディションにも対応&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Hyper-V(仮想化機能)&lt;/strong> が有効化されている&lt;/li>
&lt;li>&lt;strong>Windows Subsystem for Linux (WSL)&lt;/strong>
&lt;ul>
&lt;li>Rancher Desktop は、Windows 上で WSL が必要ですが、セットアップの一部として自動的にインストールされます&lt;/li>
&lt;li>手動でディストリビューションをダウンロードは不要&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;ul>
&lt;li>&lt;code>.deb&lt;/code>や&lt;code>.rpm&lt;/code>パッケージ、または&lt;code>AppImages&lt;/code>をインストールできるディストリビューション&lt;/li>
&lt;/ul>
&lt;h3 id="マシンスペック">マシンスペック&lt;/h3>
&lt;ul>
&lt;li>8GB のメモリー&lt;/li>
&lt;li>4 コアの CPU&lt;/li>
&lt;/ul>
&lt;h2 id="動作の仕組み">動作の仕組み&lt;/h2>
&lt;p>Rancher Desktop は、他のツールをラッピングしながら、動作を実現しています.&lt;/p>
&lt;p>MacOS と Linux では、&lt;a class="link" href="https://github.com/lima-vm/lima" target="_blank" rel="noopener"
>Lima&lt;/a> や &lt;a class="link" href="https://www.qemu.org/" target="_blank" rel="noopener"
>QEMU&lt;/a> といった仮想マシンを活用して&lt;code>containerd&lt;/code>または&lt;code>dockerd&lt;/code>と Kubernetes (&lt;a class="link" href="https://k3s.io/" target="_blank" rel="noopener"
>k3s&lt;/a>) を実行します.&lt;/p>
&lt;p>Windows システムでは、&lt;a class="link" href="https://docs.microsoft.com/en-us/windows/wsl/" target="_blank" rel="noopener"
>Windows Subsystem for Linux v2 (WSL2)&lt;/a> を利用しています.&lt;/p>
&lt;blockquote>
&lt;p>下図は &lt;a class="link" href="https://rancherdesktop.io/" target="_blank" rel="noopener"
>rancher&lt;/a> から引用
&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/how-it-works-rancher-desktop.webp"
width="1366"
height="644"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/how-it-works-rancher-desktop_huc944728323fcd0410ee5ea0609183cd8_25796_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/how-it-works-rancher-desktop_huc944728323fcd0410ee5ea0609183cd8_25796_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="how-it-works-rancher-desktop"
class="gallery-image"
data-flex-grow="212"
data-flex-basis="509px"
>&lt;/p>
&lt;/blockquote>
&lt;p>Rancher Desktop では、&lt;a class="link" href="https://github.com/containerd/nerdctl" target="_blank" rel="noopener"
>NERDCTL プロジェクト&lt;/a>と Docker CLI を利用して、イメージを build、push、pull する機能が用意されています.
なお、&lt;code>nerdctl&lt;/code> と &lt;code>docker&lt;/code> の両方が自動的にパスに入れられます. Windows ではインストーラー中に、macOS と Linux では初回実行時に行われます.&lt;/p>
&lt;p>いずれのツールを使用する場合も、Rancher Desktop が適切なコンテナランタイムで実行されている必要があります.&lt;/p>
&lt;p>&lt;code>nerdctl&lt;/code>の場合は、&lt;code>containerd&lt;/code>ランタイムを使用します。docker の場合は、&lt;code>dockerd (moby)&lt;/code>ランタイムを使用します.&lt;/p>
&lt;blockquote>
&lt;p>Lima について&lt;/p>
&lt;p>Lima は WSL と似ており、自動ファイル共有とポート転送、および containerd を備えた Linux の仮想マシンを起動します. Lima は macOS ホストで使われることが想定されていますが、Linux ホストでも使うことができます.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>QEMU について&lt;/p>
&lt;p>QEMU は、OSS の PC エミュレーターです. x86 や SPARC、MIPS といったさまざまな CPU 上の Linux、Windows などで動作し、ほかの CPU の命令をネイティブコードに変換しながら実行できるという特徴を持ちます.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>k3s について&lt;/p>
&lt;p>k3s は、Rancher Labs 社が発表した軽量な Kubernetes の 1 つで、40MB 未満のバイナリと、わずか 512MB のメモリ使用量を特徴としています. 最近では、IoT や Edge コンピューティングなどでの活用が期待されています.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>nerdctl について&lt;/p>
&lt;p>nerdctl は containerd 向けのコンテナの操作ツールです. containerd 用の docker コマンドだと考えていただければと思います.&lt;/p>
&lt;/blockquote>
&lt;h2 id="mxlinux-へのインストール">MXLinux へのインストール&lt;/h2>
&lt;p>Rancher Desktop を Linux ディストリビューションの 1 つである &lt;a class="link" href="https://mxlinux.org/" target="_blank" rel="noopener"
>MXLinux&lt;/a> にインストールしてみます.&lt;/p>
&lt;p>インストール方法は&lt;a class="link" href="https://docs.rancherdesktop.io/installation#linux" target="_blank" rel="noopener"
>公式ドキュメント&lt;/a>に従って、Rancher Desktop のリポジトリを追加し、Rancher Desktop をインストールします.&lt;/p>
&lt;p>Linux へのインストールはいくつかのパッケージがありますが、MXLinux は Debian(stable) ベースのため、&lt;code>.deb&lt;/code>パッケージを使用します.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># リポジトリを取得し、登録&lt;/span>
$ curl https://download.opensuse.org/repositories/isv:/Rancher:/stable/deb/Release.key &lt;span class="p">|&lt;/span> sudo apt-key add -
$ sudo add-apt-repository &lt;span class="s1">&amp;#39;deb https://download.opensuse.org/repositories/isv:/Rancher:/stable/deb/ ./&amp;#39;&lt;/span>
&lt;span class="c1"># パッケージ一覧を更新&lt;/span>
$ sudo apt update
&lt;span class="c1"># Rancher Desktop をインストール&lt;/span>
$ sudo apt install rancher-desktop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以上で、Rancher Desktop のインストールは完了です. 非常に簡単ですね.&lt;/p>
&lt;blockquote>
&lt;p>MXLinux について&lt;/p>
&lt;p>MXLinux は &lt;a class="link" href="https://distrowatch.com/" target="_blank" rel="noopener"
>DistroWatch.com&lt;/a> でも 注目度の高い Linux ディストリビューションです. antiX と旧 MEPIS Linux コミュニティ間の共同事業として構築されたプロジェクトでギリシャおよびアメリカにて開発されています.&lt;/p>
&lt;/blockquote>
&lt;h2 id="rancher-desktop-の起動">Rancher Desktop の起動&lt;/h2>
&lt;p>インストールした Rancher Desktop を起動してみます. アプリケーション自体は非常にシンプルでした.&lt;/p>
&lt;h3 id="general">General&lt;/h3>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-general.webp"
width="944"
height="636"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-general_hu059a24df2025e717491b18316bbc5d3f_30608_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-general_hu059a24df2025e717491b18316bbc5d3f_30608_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-general"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="356px"
>&lt;/p>
&lt;h3 id="kubernetes-setting">Kubernetes Setting&lt;/h3>
&lt;p>次に、Kubernetes の設定を見てみます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting.webp"
width="944"
height="626"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting_hu7151ea4143d487d9b27e51c7bf52205f_24220_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting_hu7151ea4143d487d9b27e51c7bf52205f_24220_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-k8s-setting"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;p>&lt;code>Kubernetes version&lt;/code>では、Kubernetes のバージョンを指定できます. 執筆時点での最新バージョンである v1.23.3 から、最も古いバージョンで v1.16.7 まで選択が可能です.&lt;/p>
&lt;p>&lt;code>Port&lt;/code>はデフォルトでは、&lt;code>6443&lt;/code>が設定されています.&lt;/p>
&lt;p>&lt;code>Container runtime&lt;/code>では、&lt;code>containerd&lt;/code>または&lt;code>dockerd (moby)&lt;/code>のどちらかを選択可能です.&lt;/p>
&lt;p>&lt;code>Memory (GB)&lt;/code>, &lt;code>CPUs&lt;/code>は、メモリー、CPU のコア数を指定できます. 赤いラインまで数値を上げると、下図のように警告文が表示されます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting-danger.webp"
width="944"
height="626"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting-danger_huc9b36cd09d0ffb131933753ab27b2b69_25280_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-k8s-setting-danger_huc9b36cd09d0ffb131933753ab27b2b69_25280_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-k8s-setting-danger"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;p>一度、環境をクリーンアップしたい場合は、&lt;code>Reset Kubernetes&lt;/code>を押すことで簡単にリセットすることができます.&lt;/p>
&lt;h3 id="supporting-utilities">Supporting Utilities&lt;/h3>
&lt;p>&lt;code>Supporting Utilities&lt;/code>では、インストールされたツール郡が表示されています. 既にインストールされていた Docker などに対しては、丁寧に注意喚起が書かれていました.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-supporting-utilities.webp"
width="944"
height="626"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-supporting-utilities_huff6a285d550fd0eb5e37c441ba9d155e_22744_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-supporting-utilities_huff6a285d550fd0eb5e37c441ba9d155e_22744_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-supporting-utilities"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;h3 id="images">Images&lt;/h3>
&lt;p>&lt;code>Images&lt;/code> では、Rancher Desktop で使用しているイメージが表示されています. イメージ一覧の&lt;code>⋮&lt;/code>から&lt;code>Scan&lt;/code>を選択すると、イメージの脆弱性を &lt;a class="link" href="https://github.com/aquasecurity/trivy" target="_blank" rel="noopener"
>Trivy&lt;/a> を使用してスキャンしてくれる.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-images.webp"
width="944"
height="712"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-images_hu0d05a7dd4f6db0e258fd2797df031a80_36154_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-images_hu0d05a7dd4f6db0e258fd2797df031a80_36154_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-images"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="318px"
>&lt;/p>
&lt;p>ここで、&lt;code>Image Namespace&lt;/code>に注目してください. &lt;code>containerd&lt;/code>では、Kubernetes と同様に&lt;code>namespace&lt;/code>という概念が存在しています.
そのため、Kubenetes が &lt;code>namespace&lt;/code>を持つことができるように、&lt;code>containerd&lt;/code>も同じように&lt;code>namespace&lt;/code>を持つことができます.
上図では、&lt;code>namespace:k8s.io&lt;/code>にイメージが存在しているということになります.&lt;/p>
&lt;p>実際に&lt;code>nerdctl&lt;/code>コマンドを使用して、&lt;code>namespace&lt;/code>を確認してみます. &lt;code>nerdctl namespace list&lt;/code>で&lt;code>namespace&lt;/code>の一覧を表示します.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl namespace list
NAME CONTAINERS IMAGES VOLUMES
buildkit &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
k8s.io &lt;span class="m">22&lt;/span> &lt;span class="m">16&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>実行してみると、&lt;code>k8s.io&lt;/code>にイメージが存在していることが確認できました.&lt;/p>
&lt;p>また、&lt;code>nerdctl --namespace k8s.io ps&lt;/code>で&lt;code>namespace:k8s.io&lt;/code>で、Rancher Desktop で作成した Kubernetes のコンテナ群が確認できます.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl --namespace k8s.io ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
1f642d94e7d5 docker.io/rancher/klipper-lb:v0.3.4 &lt;span class="s2">&amp;#34;entry&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr/lb-port-443
2ca56d5f0874 docker.io/rancher/mirrored-library-traefik:2.5.6 &lt;span class="s2">&amp;#34;/entrypoint.sh --gl…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/traefik-6bb96f9bd8-cflf4/traefik
2f1c800451cf docker.io/rancher/mirrored-coredns-coredns:1.8.6 &lt;span class="s2">&amp;#34;/coredns -conf /etc…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/coredns-5789895cd-wgxlq/coredns
56bd8fba2fda docker.io/rancher/klipper-lb:v0.3.4 &lt;span class="s2">&amp;#34;entry&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr/lb-port-80
5908afd18045 docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/coredns-5789895cd-wgxlq
8c16131e6d1b docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr
95b859fec9ed docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/local-path-provisioner-6c79684f77-plbxh
a0656b86ab35 docker.io/rancher/local-path-provisioner:v0.0.21 &lt;span class="s2">&amp;#34;local-path-provisio…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/local-path-provisioner-6c79684f77-plbxh/local-path-provisioner
a5c31106d6d7 docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/traefik-6bb96f9bd8-cflf4
c9417746b27d docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/metrics-server-7cd5fcb6b7-4cbkd
ce64e7b0a242 docker.io/rancher/mirrored-metrics-server:v0.5.2 &lt;span class="s2">&amp;#34;/metrics-server --c…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/metrics-server-7cd5fcb6b7-4cbkd/metrics-server
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="troubleshooting">Troubleshooting&lt;/h3>
&lt;p>&lt;code>Troubleshooting&lt;/code>では、ログの有効化、また Rancher Desktop 自体の初期化ができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-troubleshooting.webp"
width="1077"
height="712"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-troubleshooting_huf225ebab95640cf0cebc4ea1e8bd02aa_21400_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-troubleshooting_huf225ebab95640cf0cebc4ea1e8bd02aa_21400_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-troubleshooting"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="363px"
>&lt;/p>
&lt;h2 id="検証">検証&lt;/h2>
&lt;p>Rancher Desktop 上で、実際にコンテナなどを動かして見ます.&lt;/p>
&lt;h3 id="nerdctl-の使用">nerdctl の使用&lt;/h3>
&lt;p>&lt;code>nerdctl&lt;/code>コマンドを使用して、nginx を起動してみます. &lt;code>namespace&lt;/code> は未指定の場合、デフォルトで&lt;code>default&lt;/code>に配置されます.&lt;/p>
&lt;h4 id="nginx-を起動">nginx を起動&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl run -d -p 9999:80 nginx
docker.io/library/nginx:latest: resolved &lt;span class="p">|&lt;/span>++++++++++++++++++++++++++++++++++++++&lt;span class="p">|&lt;/span>
index-sha256:2834dc507516af02784808c5f48b7cbe38b8ed5d0f4837f16e78d00deb7e7767: &lt;span class="k">done&lt;/span> &lt;span class="p">|&lt;/span>++++++++++++++++++++++++++++++++++++++&lt;span class="p">|&lt;/span>
...
elapsed: 7.2 s total: 54.1 M &lt;span class="o">(&lt;/span>7.5 MiB/s&lt;span class="o">)&lt;/span>
484e86556e00843200c97b5aa779ba81a9016796e23964e5a0cac27159de444e
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="コンテナの状態を確認">コンテナの状態を確認&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
484e86556e00 docker.io/library/nginx:latest &lt;span class="s2">&amp;#34;/docker-entrypoint.…&amp;#34;&lt;/span> &lt;span class="m">6&lt;/span> minutes ago Up 0.0.0.0:9999-&amp;gt;80/tcp nginx-484e8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="namespace-を確認">namespace を確認&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl namespace list
NAME CONTAINERS IMAGES VOLUMES
buildkit &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
default &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">0&lt;/span>
k8s.io &lt;span class="m">22&lt;/span> &lt;span class="m">16&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="namespace-default-のプロセスを確認">namespace default のプロセスを確認&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl --namespace default ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
484e86556e00 docker.io/library/nginx:latest &lt;span class="s2">&amp;#34;/docker-entrypoint.…&amp;#34;&lt;/span> &lt;span class="m">11&lt;/span> minutes ago Up 0.0.0.0:9999-&amp;gt;80/tcp nginx-484e8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>また、Rancher Desktop からも&lt;code>namespace:default&lt;/code>に nginx イメージを確認することができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-run-nginx.webp"
width="1077"
height="386"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-run-nginx_hu64b47d25b1c5382769f0d3d19ec04581_15450_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/rancher-desktop-run-nginx_hu64b47d25b1c5382769f0d3d19ec04581_15450_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-run-nginx"
class="gallery-image"
data-flex-grow="279"
data-flex-basis="669px"
>&lt;/p>
&lt;p>最後に、&lt;code>localhost:9999&lt;/code>にアクセスして、nginx の起動を確認してみます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/run-nginx.webp"
width="713"
height="311"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/run-nginx_hue4500114d1f5983fc71b7d3be58ac512_23222_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/run-nginx_hue4500114d1f5983fc71b7d3be58ac512_23222_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="run-nginx"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="550px"
>&lt;/p>
&lt;h3 id="helm-の使用">Helm の使用&lt;/h3>
&lt;p>Rancher Desktop では、起動時に Helm もインストールされるので、Helm を使って Kubernetes に Grafana をデプロイしてみます.&lt;/p>
&lt;h4 id="helm-に-grafana-のリポジトリを追加">Helm に Grafana のリポジトリを追加&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm repo add grafana https://grafana.github.io/helm-charts
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="helm-にリポジトリが追加されていることを確認">Helm にリポジトリが追加されていることを確認&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm repo list
NAME URL
grafana https://grafana.github.io/helm-charts
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="追加した-grafana-リポジトリからチャートを確認">追加した Grafana リポジトリからチャートを確認&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm search repo grafana
NAME CHART VERSION APP VERSION DESCRIPTION
grafana/grafana 6.21.1 8.3.4 The leading tool &lt;span class="k">for&lt;/span> querying and visualizing t...
grafana/grafana-agent-operator 0.1.5 0.22.0 A Helm chart &lt;span class="k">for&lt;/span> Grafana Agent Operator
grafana/enterprise-logs 2.0.0 v1.3.0 Grafana Enterprise Logs
grafana/enterprise-metrics 1.7.3 v1.6.1 Grafana Enterprise Metrics
grafana/fluent-bit 2.3.0 v2.1.0 Uses fluent-bit Loki go plugin &lt;span class="k">for&lt;/span> gathering lo...
grafana/loki 2.9.1 v2.4.2 Loki: like Prometheus, but &lt;span class="k">for&lt;/span> logs.
grafana/loki-canary 0.5.1 2.4.1 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki Canary
grafana/loki-distributed 0.42.0 2.4.2 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki in microservices mode
grafana/loki-simple-scalable 0.2.0 2.4.2 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki in simple, scalable...
grafana/loki-stack 2.5.1 v2.1.0 Loki: like Prometheus, but &lt;span class="k">for&lt;/span> logs.
grafana/promtail 3.10.0 2.4.2 Promtail is an agent which ships the contents o...
grafana/tempo 0.13.0 1.3.0 Grafana Tempo Single Binary Mode
grafana/tempo-distributed 0.15.0 1.3.0 Grafana Tempo in MicroService mode
grafana/tempo-vulture 0.2.0 1.3.0 Grafana Tempo Vulture - A tool to monitor Tempo...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="helm-チャートをリリース">Helm チャートをリリース&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/kubectl create namespace monitoring
$ ./.local/bin/helm install grafana --namespace monitoring grafana/grafana
W0128 03:37:33.477723 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.480386 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.538004 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.538201 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
NAME: grafana
LAST DEPLOYED: Fri Jan &lt;span class="m">28&lt;/span> 03:37:32 &lt;span class="m">2022&lt;/span>
NAMESPACE: monitoring
STATUS: deployed
REVISION: &lt;span class="m">1&lt;/span>
NOTES:
1. Get your &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span> user password by running:
kubectl get secret --namespace monitoring grafana -o &lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{.data.admin-password}&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64 --decode &lt;span class="p">;&lt;/span> &lt;span class="nb">echo&lt;/span>
2. The Grafana server can be accessed via port &lt;span class="m">80&lt;/span> on the following DNS name from within your cluster:
grafana.monitoring.svc.cluster.local
Get the Grafana URL to visit by running these commands in the same shell:
&lt;span class="nb">export&lt;/span> &lt;span class="nv">POD_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>kubectl get pods --namespace monitoring -l &lt;span class="s2">&amp;#34;app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana&amp;#34;&lt;/span> -o &lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
kubectl --namespace monitoring port-forward &lt;span class="nv">$POD_NAME&lt;/span> &lt;span class="m">3000&lt;/span>
3. Login with the password from step &lt;span class="m">1&lt;/span> and the username: admin
&lt;span class="c1">#################################################################################&lt;/span>
&lt;span class="c1">###### WARNING: Persistence is disabled!!! You will lose your data when #####&lt;/span>
&lt;span class="c1">###### the Grafana pod is terminated. #####&lt;/span>
&lt;span class="c1">#################################################################################&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上記の手順に従って、正常に Grafana にログインすることができました.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/grafana-dashboard.webp"
width="883"
height="593"
srcset="https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/grafana-dashboard_hue6ce27b56b920f20ad161f85bcfd5a62_34598_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/mxlinux-%E3%81%A7-rancher-desktop-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/grafana-dashboard_hue6ce27b56b920f20ad161f85bcfd5a62_34598_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="grafana-dashboard"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="357px"
>&lt;/p>
&lt;p>最後に、&lt;code>kubectl&lt;/code>コマンドを使って Grafana が立ち上がっていることを確認します.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/kubectl get all --namespace monitoring
NAME READY STATUS RESTARTS AGE
pod/grafana-6b9d4f7f86-mwb4q 1/1 Running &lt;span class="m">0&lt;/span> 15m
NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span class="o">(&lt;/span>S&lt;span class="o">)&lt;/span> AGE
service/grafana ClusterIP 10.43.218.65 &amp;lt;none&amp;gt; 80/TCP 15m
NAME READY UP-TO-DATE AVAILABLE AGE
deployment.apps/grafana 1/1 &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 15m
NAME DESIRED CURRENT READY AGE
replicaset.apps/grafana-6b9d4f7f86 &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 15m
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以上のように、Rancher Desktop を起動するだけでアプリケーションの開発やデプロイが簡単に行うことができました.&lt;/p>
&lt;h2 id="所感">所感&lt;/h2>
&lt;p>今回は、v1.0.0 がリリースされた Rancher Desktop を触ってみましたが、非常に完成度の高いツールでした. &lt;code>containerd&lt;/code>、&lt;code>nerdctl&lt;/code>を初めて触る方も Rancher Desktop は良い機会だと思います.&lt;/p>
&lt;p>昨年、&lt;a class="link" href="https://www.docker.com/blog/updating-product-subscriptions/" target="_blank" rel="noopener"
>Docker Desktop が有料化&lt;/a>が大きなニュースとなり、それに伴い、密かに代替案として注目されていた Rancher Desktop ですが、
Docker Desktop から乗り換えたとしても遜色なく利用できるかと思います. 万が一、Docker のランタイムを使用したいと思えば、Rancher Desktop 上から切り替えれば良いので、大して手間は掛かりません.&lt;/p>
&lt;p>また、Kubernetes のバージョンをスムーズに切り替えられるのも個人的には大きなメリットなのかなと思います.&lt;/p>
&lt;p>これから、コンテナを利用する手段の 1 つとして、広く普及していく可能性は大いにあり得るので、今後の動向に注目していきたいと思います.&lt;/p></description></item><item><title>Running Rancher Desktop on MXLinux</title><link>https://example.com/p/running-rancher-desktop-on-mxlinux/</link><pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate><guid>https://example.com/p/running-rancher-desktop-on-mxlinux/</guid><description>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/featured-image.webp" alt="Featured image of post Running Rancher Desktop on MXLinux" />&lt;p>On January 26th, &lt;a class="link" href="https://rancherdesktop.io/" target="_blank" rel="noopener"
>Rancher Desktop&lt;/a> was officially released as &lt;a class="link" href="https://github.com/rancher-sandbox/rancher-desktop/releases/tag/v1.0.0" target="_blank" rel="noopener"
>v1.0.0&lt;/a>.&lt;/p>
&lt;p>In this article, I&amp;rsquo;ll try to install and run Rancher Desktop on MXLinux.&lt;/p>
&lt;h2 id="what-is-rancher-desktop">What is Rancher Desktop?&lt;/h2>
&lt;p>Rancher Desktop is a desktop application built on Electron and Node.js that allows you to run Kubernetes and container management on your desktop.&lt;/p>
&lt;p>You can choose any version of Kubernetes to run.&lt;/p>
&lt;p>You can use &lt;code>containerd&lt;/code> or &lt;code>Moby (dockerd)&lt;/code> to build, push, pull and run container images. The built container images can be run immediately in Kubernetes without the need for a registry.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;p>It is an OSS desktop application that can run on macOS, Windows, and various Linux environments. It also supports M1, so it can run on almost any environment.&lt;/p>
&lt;p>The requirements for each environment are as follows.&lt;/p>
&lt;h3 id="macos">macOS&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>macOS&lt;/strong>.
&lt;ul>
&lt;li>Catalina 10.15 or later&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CPU architecture**
&lt;ul>
&lt;li>Intel CPU with Apple Silicon (M1) or VT-x&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="windowsos">WindowsOS&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Windows&lt;/strong>.
&lt;ul>
&lt;li>Windows 10 build 1909 or later&lt;/li>
&lt;li>Home Edition is also supported&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Hyper-V (virtualization)&lt;/strong> is enabled&lt;/li>
&lt;li>&lt;strong>Windows Subsystem for Linux (WSL)&lt;/strong>.
&lt;ul>
&lt;li>Rancher Desktop requires WSL on Windows, but it will be installed automatically as part of the setup&lt;/li>
&lt;li>No need to download the distribution manually&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;ul>
&lt;li>Distributions that can install &lt;code>.deb&lt;/code> or &lt;code>.rpm&lt;/code> packages, or `AppImages&lt;/li>
&lt;/ul>
&lt;h3 id="machine-specs">Machine specs&lt;/h3>
&lt;ul>
&lt;li>8GB memory&lt;/li>
&lt;li>4-core CPU&lt;/li>
&lt;/ul>
&lt;h2 id="how-it-works">How it works&lt;/h2>
&lt;p>Rancher Desktop is wrapping other tools to make it work.&lt;/p>
&lt;p>On MacOS and Linux, it leverages virtual machines such as &lt;a class="link" href="https://github.com/lima-vm/lima" target="_blank" rel="noopener"
>Lima&lt;/a> and &lt;a class="link" href="https://www.qemu.org/" target="_blank" rel="noopener"
>QEMU&lt;/a> to run &lt;code>containerd&lt;/code> or &lt;code>dockerd&lt;/code> and Kubernetes (&lt;a class="link" href="https://k3s.io/" target="_blank" rel="noopener"
>k3s&lt;/a>).&lt;/p>
&lt;p>For Windows systems, we utilize &lt;a class="link" href="https://docs.microsoft.com/en-us/windows/wsl/" target="_blank" rel="noopener"
>Windows Subsystem for Linux v2 (WSL2)&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>The figure below is taken from &lt;a class="link" href="https://rancherdesktop.io/" target="_blank" rel="noopener"
>rancher&lt;/a>
how-it-works-rancher-desktop](how-it-works-rancher-desktop.webp)&lt;/p>
&lt;/blockquote>
&lt;p>Rancher Desktop provides functions to build, push, and pull images using &lt;a class="link" href="https://github.com/containerd/nerdctl" target="_blank" rel="noopener"
>NERDCTL project&lt;/a> and Docker CLI.
Note that both &lt;code>nerdctl&lt;/code> and &lt;code>docker&lt;/code> are automatically included in the path. On Windows, this is done during the installer, and on macOS and Linux, it is done at first run.&lt;/p>
&lt;p>To use either of these tools, Rancher Desktop must be running with the appropriate container runtime.&lt;/p>
&lt;p>For &lt;code>nerdctl&lt;/code>, use the &lt;code>containerd&lt;/code> runtime; for docker, use the &lt;code>dockerd (moby)&lt;/code> runtime.&lt;/p>
&lt;blockquote>
&lt;p>About Lima&lt;/p>
&lt;p>Lima is similar to WSL, and boots a Linux virtual machine with automatic file sharing and port forwarding, and containerd. Lima is intended to be used on macOS hosts, but can be used on Linux hosts as well.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>About QEMU&lt;/p>
&lt;p>QEMU is an OSS PC emulator. It runs on Linux, Windows, etc. on various CPUs such as x86, SPARC, MIPS, etc. It has the feature that it can execute instructions of other CPUs while converting them into native code.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>About k3s&lt;/p>
&lt;p>k3s is one of the lightweight Kubernetes released by Rancher Labs, featuring a binary size of less than 40MB and a memory usage of only 512MB. Recently, it is expected to be used in IoT and Edge computing.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>About nerdctl&lt;/p>
&lt;p>nerdctl is a container manipulation tool for containerd. You can think of it as a docker command for containerd.&lt;/p>
&lt;/blockquote>
&lt;h2 id="installing-on-mxlinux">Installing on MXLinux&lt;/h2>
&lt;p>Let&amp;rsquo;s try to install Rancher Desktop on one of the Linux distributions, &lt;a class="link" href="https://mxlinux.org/" target="_blank" rel="noopener"
>MXLinux&lt;/a>.&lt;/p>
&lt;p>To install, follow the &lt;a class="link" href="https://docs.rancherdesktop.io/installation#linux" target="_blank" rel="noopener"
>official documentation&lt;/a>, add the Rancher Desktop repository, and install Rancher Desktop.&lt;/p>
&lt;p>There are several packages available for installation on Linux, but since MXLinux is based on Debian(stable), we will use the &lt;code>.deb&lt;/code> package.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># Obtain and register the repository&lt;/span>
$ curl https://download.opensuse.org/repositories/isv:/Rancher:/stable/deb/Release.key &lt;span class="p">|&lt;/span> sudo apt-key add -
$ sudo add-apt-repository &lt;span class="s1">&amp;#39;deb https://download.opensuse.org/repositories/isv:/Rancher:/stable/deb/ ./&amp;#39;&lt;/span>
&lt;span class="c1"># Updated package list&lt;/span>
$ sudo apt update
&lt;span class="c1"># Install Rancher Desktop&lt;/span>
$ sudo apt install rancher-desktop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This completes the installation of Rancher Desktop. It&amp;rsquo;s very easy.&lt;/p>
&lt;blockquote>
&lt;p>About MXLinux&lt;/p>
&lt;p>MXLinux is one of the most popular Linux distributions on &lt;a class="link" href="https://distrowatch.com/" target="_blank" rel="noopener"
>DistroWatch.com&lt;/a>
It is a joint project between antiX and the former MEPIS Linux community and is being developed in Greece and the United States.&lt;/p>
&lt;/blockquote>
&lt;h2 id="launching-rancher-desktop">Launching Rancher Desktop&lt;/h2>
&lt;p>Let&amp;rsquo;s run the installed Rancher Desktop. The application itself is very simple.&lt;/p>
&lt;h3 id="general">General&lt;/h3>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-general.webp"
width="944"
height="636"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-general_hu059a24df2025e717491b18316bbc5d3f_30608_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-general_hu059a24df2025e717491b18316bbc5d3f_30608_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-general"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="356px"
>&lt;/p>
&lt;h3 id="kubernetes-setting">Kubernetes Setting&lt;/h3>
&lt;p>Next, let&amp;rsquo;s take a look at the Kubernetes configuration.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting.webp"
width="944"
height="626"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting_hu7151ea4143d487d9b27e51c7bf52205f_24220_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting_hu7151ea4143d487d9b27e51c7bf52205f_24220_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-k8s-setting"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;p>In &lt;code>Kubernetes version&lt;/code>, you can specify the version of Kubernetes. You can select from v1.23.3, the latest version at the time of writing, to v1.16.7, the oldest version.&lt;/p>
&lt;p>The &lt;code>Port&lt;/code> is set to &lt;code>6443&lt;/code> by default.&lt;/p>
&lt;p>For &lt;code>Container runtime&lt;/code>, you can choose between &lt;code>containerd&lt;/code> and &lt;code>dockerd (moby)&lt;/code>.&lt;/p>
&lt;p>For &lt;code>Memory (GB)&lt;/code> and &lt;code>CPUs&lt;/code>, you can specify the number of memory and CPU cores. If you increase the value up to the red line, a warning message will be displayed as shown below.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting-danger.webp"
width="944"
height="626"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting-danger_huc9b36cd09d0ffb131933753ab27b2b69_25280_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-k8s-setting-danger_huc9b36cd09d0ffb131933753ab27b2b69_25280_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-k8s-setting-danger"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;p>If you want to clean up your environment once, you can easily reset it by pressing &lt;code>Reset Kubernetes&lt;/code>.&lt;/p>
&lt;h3 id="supporting-utilities">Supporting Utilities&lt;/h3>
&lt;p>In the &lt;code>Supporting Utilities&lt;/code> section, you can see the tools that were installed. For Docker, etc., which were already installed, a warning was carefully written.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-supporting-utilities.webp"
width="944"
height="626"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-supporting-utilities_huff6a285d550fd0eb5e37c441ba9d155e_22744_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-supporting-utilities_huff6a285d550fd0eb5e37c441ba9d155e_22744_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-supporting-utilities"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="361px"
>&lt;/p>
&lt;h3 id="images">Images&lt;/h3>
&lt;p>In &lt;code>Images&lt;/code>, you can see the images used by Rancher Desktop. Select &lt;code>Scan&lt;/code> from &lt;code>⋮&lt;/code> in the image list to scan the image for vulnerabilities using &lt;a class="link" href="https://github.com/aquasecurity/trivy" target="_blank" rel="noopener"
>Trivy&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-images.webp"
width="944"
height="712"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-images_hu0d05a7dd4f6db0e258fd2797df031a80_36154_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-images_hu0d05a7dd4f6db0e258fd2797df031a80_36154_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-images"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="318px"
>&lt;/p>
&lt;p>Notice the &lt;code>Image Namespace&lt;/code> here. In &lt;code>containerd&lt;/code>, the concept of &lt;code>namespace&lt;/code> exists as in Kubernetes.
So, just as Kubernetes can have &lt;code>namespace&lt;/code>, &lt;code>containerd&lt;/code> can have &lt;code>namespace&lt;/code> as well.
In the above figure, the image exists in &lt;code>namespace:k8s.io&lt;/code>.&lt;/p>
&lt;p>Let&amp;rsquo;s check the &lt;code>namespace&lt;/code> using the &lt;code>nerdctl&lt;/code> command. Use &lt;code>nerdctl namespace list&lt;/code> to display a list of &lt;code>namespaces&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl namespace list
NAME CONTAINERS IMAGES VOLUMES
buildkit &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
k8s.io &lt;span class="m">22&lt;/span> &lt;span class="m">16&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When you run &lt;code>nerdctl --namespace k8s.io ps&lt;/code>, you can see that the image exists in &lt;code>k8s.io&lt;/code>.&lt;/p>
&lt;p>You can also use &lt;code>nerdctl --namespace k8s.io ps&lt;/code> to check &lt;code>namespace:k8s.io&lt;/code> for Kubernetes containers created with Rancher Desktop.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl --namespace k8s.io ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
1f642d94e7d5 docker.io/rancher/klipper-lb:v0.3.4 &lt;span class="s2">&amp;#34;entry&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr/lb-port-443
2ca56d5f0874 docker.io/rancher/mirrored-library-traefik:2.5.6 &lt;span class="s2">&amp;#34;/entrypoint.sh --gl…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/traefik-6bb96f9bd8-cflf4/traefik
2f1c800451cf docker.io/rancher/mirrored-coredns-coredns:1.8.6 &lt;span class="s2">&amp;#34;/coredns -conf /etc…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/coredns-5789895cd-wgxlq/coredns
56bd8fba2fda docker.io/rancher/klipper-lb:v0.3.4 &lt;span class="s2">&amp;#34;entry&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr/lb-port-80
5908afd18045 docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/coredns-5789895cd-wgxlq
8c16131e6d1b docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">50&lt;/span> minutes ago Up k8s://kube-system/svclb-traefik-svnfr
95b859fec9ed docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/local-path-provisioner-6c79684f77-plbxh
a0656b86ab35 docker.io/rancher/local-path-provisioner:v0.0.21 &lt;span class="s2">&amp;#34;local-path-provisio…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/local-path-provisioner-6c79684f77-plbxh/local-path-provisioner
a5c31106d6d7 docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/traefik-6bb96f9bd8-cflf4
c9417746b27d docker.io/rancher/mirrored-pause:3.6 &lt;span class="s2">&amp;#34;/pause&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/metrics-server-7cd5fcb6b7-4cbkd
ce64e7b0a242 docker.io/rancher/mirrored-metrics-server:v0.5.2 &lt;span class="s2">&amp;#34;/metrics-server --c…&amp;#34;&lt;/span> &lt;span class="m">49&lt;/span> minutes ago Up k8s://kube-system/metrics-server-7cd5fcb6b7-4cbkd/metrics-server
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="troubleshooting">Troubleshooting&lt;/h3>
&lt;p>In &lt;code>Troubleshooting&lt;/code>, you can enable logging and initialize Rancher Desktop itself.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-troubleshooting.webp"
width="1077"
height="712"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-troubleshooting_huf225ebab95640cf0cebc4ea1e8bd02aa_21400_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-troubleshooting_huf225ebab95640cf0cebc4ea1e8bd02aa_21400_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-troubleshooting"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="363px"
>&lt;/p>
&lt;h2 id="検証">検証&lt;/h2>
&lt;p>Let&amp;rsquo;s try to run a container on Rancher Desktop.&lt;/p>
&lt;h3 id="use-nerdctl">Use nerdctl&lt;/h3>
&lt;p>Try to start nginx using the &lt;code>nerdctl&lt;/code> command. If &lt;code>namespace&lt;/code> is not specified, it will be placed in &lt;code>default&lt;/code> by default.&lt;/p>
&lt;h4 id="launch-nginx">Launch nginx&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl run -d -p 9999:80 nginx
docker.io/library/nginx:latest: resolved &lt;span class="p">|&lt;/span>++++++++++++++++++++++++++++++++++++++&lt;span class="p">|&lt;/span>
index-sha256:2834dc507516af02784808c5f48b7cbe38b8ed5d0f4837f16e78d00deb7e7767: &lt;span class="k">done&lt;/span> &lt;span class="p">|&lt;/span>++++++++++++++++++++++++++++++++++++++&lt;span class="p">|&lt;/span>
...
elapsed: 7.2 s total: 54.1 M &lt;span class="o">(&lt;/span>7.5 MiB/s&lt;span class="o">)&lt;/span>
484e86556e00843200c97b5aa779ba81a9016796e23964e5a0cac27159de444e
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="check-the-status-of-the-container">Check the status of the container.&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
484e86556e00 docker.io/library/nginx:latest &lt;span class="s2">&amp;#34;/docker-entrypoint.…&amp;#34;&lt;/span> &lt;span class="m">6&lt;/span> minutes ago Up 0.0.0.0:9999-&amp;gt;80/tcp nginx-484e8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="check-the-namespace">Check the namespace&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl namespace list
NAME CONTAINERS IMAGES VOLUMES
buildkit &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span>
default &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">0&lt;/span>
k8s.io &lt;span class="m">22&lt;/span> &lt;span class="m">16&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="check-the-process-of-namespace-default">Check the process of namespace default&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/nerdctl --namespace default ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
484e86556e00 docker.io/library/nginx:latest &lt;span class="s2">&amp;#34;/docker-entrypoint.…&amp;#34;&lt;/span> &lt;span class="m">11&lt;/span> minutes ago Up 0.0.0.0:9999-&amp;gt;80/tcp nginx-484e8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can also see the nginx image in &lt;code>namespace:default&lt;/code> from Rancher Desktop.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-run-nginx.webp"
width="1077"
height="386"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-run-nginx_hu64b47d25b1c5382769f0d3d19ec04581_15450_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/rancher-desktop-run-nginx_hu64b47d25b1c5382769f0d3d19ec04581_15450_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="rancher-desktop-run-nginx"
class="gallery-image"
data-flex-grow="279"
data-flex-basis="669px"
>&lt;/p>
&lt;p>Finally, try to access &lt;code>localhost:9999&lt;/code> to check if nginx is up and running.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/run-nginx.webp"
width="713"
height="311"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/run-nginx_hue4500114d1f5983fc71b7d3be58ac512_23222_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/run-nginx_hue4500114d1f5983fc71b7d3be58ac512_23222_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="run-nginx"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="550px"
>&lt;/p>
&lt;h3 id="use-helm">Use Helm&lt;/h3>
&lt;p>Rancher Desktop also installs Helm at startup, so let&amp;rsquo;s deploy Grafana to Kubernetes using Helm.&lt;/p>
&lt;h4 id="add-grafana-repository-to-helm">Add Grafana repository to Helm&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm repo add grafana https://grafana.github.io/helm-charts
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="verify-that-the-repository-has-been-added-to-helm">Verify that the repository has been added to Helm&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm repo list
NAME URL
grafana https://grafana.github.io/helm-charts
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="view-the-chart-from-the-added-grafana-repository">View the chart from the added Grafana repository&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/helm search repo grafana
NAME CHART VERSION APP VERSION DESCRIPTION
grafana/grafana 6.21.1 8.3.4 The leading tool &lt;span class="k">for&lt;/span> querying and visualizing t...
grafana/grafana-agent-operator 0.1.5 0.22.0 A Helm chart &lt;span class="k">for&lt;/span> Grafana Agent Operator
grafana/enterprise-logs 2.0.0 v1.3.0 Grafana Enterprise Logs
grafana/enterprise-metrics 1.7.3 v1.6.1 Grafana Enterprise Metrics
grafana/fluent-bit 2.3.0 v2.1.0 Uses fluent-bit Loki go plugin &lt;span class="k">for&lt;/span> gathering lo...
grafana/loki 2.9.1 v2.4.2 Loki: like Prometheus, but &lt;span class="k">for&lt;/span> logs.
grafana/loki-canary 0.5.1 2.4.1 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki Canary
grafana/loki-distributed 0.42.0 2.4.2 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki in microservices mode
grafana/loki-simple-scalable 0.2.0 2.4.2 Helm chart &lt;span class="k">for&lt;/span> Grafana Loki in simple, scalable...
grafana/loki-stack 2.5.1 v2.1.0 Loki: like Prometheus, but &lt;span class="k">for&lt;/span> logs.
grafana/promtail 3.10.0 2.4.2 Promtail is an agent which ships the contents o...
grafana/tempo 0.13.0 1.3.0 Grafana Tempo Single Binary Mode
grafana/tempo-distributed 0.15.0 1.3.0 Grafana Tempo in MicroService mode
grafana/tempo-vulture 0.2.0 1.3.0 Grafana Tempo Vulture - A tool to monitor Tempo...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="helm-charts-released">Helm Charts Released&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/kubectl create namespace monitoring
$ ./.local/bin/helm install grafana --namespace monitoring grafana/grafana
W0128 03:37:33.477723 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.480386 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.538004 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0128 03:37:33.538201 &lt;span class="m">218028&lt;/span> warnings.go:70&lt;span class="o">]&lt;/span> policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
NAME: grafana
LAST DEPLOYED: Fri Jan &lt;span class="m">28&lt;/span> 03:37:32 &lt;span class="m">2022&lt;/span>
NAMESPACE: monitoring
STATUS: deployed
REVISION: &lt;span class="m">1&lt;/span>
NOTES:
1. Get your &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span> user password by running:
kubectl get secret --namespace monitoring grafana -o &lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{.data.admin-password}&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64 --decode &lt;span class="p">;&lt;/span> &lt;span class="nb">echo&lt;/span>
2. The Grafana server can be accessed via port &lt;span class="m">80&lt;/span> on the following DNS name from within your cluster:
grafana.monitoring.svc.cluster.local
Get the Grafana URL to visit by running these commands in the same shell:
&lt;span class="nb">export&lt;/span> &lt;span class="nv">POD_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>kubectl get pods --namespace monitoring -l &lt;span class="s2">&amp;#34;app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana&amp;#34;&lt;/span> -o &lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{.items[0].metadata.name}&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
kubectl --namespace monitoring port-forward &lt;span class="nv">$POD_NAME&lt;/span> &lt;span class="m">3000&lt;/span>
3. Login with the password from step &lt;span class="m">1&lt;/span> and the username: admin
&lt;span class="c1">#################################################################################&lt;/span>
&lt;span class="c1">###### WARNING: Persistence is disabled!!! You will lose your data when #####&lt;/span>
&lt;span class="c1">###### the Grafana pod is terminated. #####&lt;/span>
&lt;span class="c1">#################################################################################&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Following the steps above, you should now be able to successfully login to Grafana.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/running-rancher-desktop-on-mxlinux/grafana-dashboard.webp"
width="883"
height="593"
srcset="https://example.com/p/running-rancher-desktop-on-mxlinux/grafana-dashboard_hue6ce27b56b920f20ad161f85bcfd5a62_34598_480x0_resize_q75_h2_box_2.webp 480w, https://example.com/p/running-rancher-desktop-on-mxlinux/grafana-dashboard_hue6ce27b56b920f20ad161f85bcfd5a62_34598_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="grafana-dashboard"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="357px"
>&lt;/p>
&lt;p>Finally, use the &lt;code>kubectl&lt;/code> command to make sure that Grafana is up and running.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ ./.local/bin/kubectl get all --namespace monitoring
NAME READY STATUS RESTARTS AGE
pod/grafana-6b9d4f7f86-mwb4q 1/1 Running &lt;span class="m">0&lt;/span> 15m
NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span class="o">(&lt;/span>S&lt;span class="o">)&lt;/span> AGE
service/grafana ClusterIP 10.43.218.65 &amp;lt;none&amp;gt; 80/TCP 15m
NAME READY UP-TO-DATE AVAILABLE AGE
deployment.apps/grafana 1/1 &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 15m
NAME DESIRED CURRENT READY AGE
replicaset.apps/grafana-6b9d4f7f86 &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 15m
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As you can see above, you can easily develop and deploy your application just by running Rancher Desktop.&lt;/p>
&lt;h2 id="impression">Impression&lt;/h2>
&lt;p>This time, I touched Rancher Desktop, which was released v1.0.0, and found it to be a very complete tool. If you are new to &lt;code>containerd&lt;/code> or &lt;code>nerdctl&lt;/code>, Rancher Desktop is a good opportunity for you.&lt;/p>
&lt;p>Last year, &lt;a class="link" href="https://www.docker.com/blog/updating-product-subscriptions/" target="_blank" rel="noopener"
>Docker Desktop is now paid&lt;/a> became a big news, and Rancher Desktop, but
If you switch from Docker Desktop, you will be able to use it without any problems. If you want to use Docker&amp;rsquo;s runtime, you can switch from Rancher Desktop without much trouble.&lt;/p>
&lt;p>Also, I personally think that the ability to smoothly switch between Kubernetes versions is a big advantage.&lt;/p>
&lt;p>There is a great possibility that this will become one of the most popular ways to use containers in the future, so I will keep an eye on the future developments.&lt;/p></description></item><item><title>Karpenter Deep Dive</title><link>https://example.com/p/karpenter-deep-dive/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://example.com/p/karpenter-deep-dive/</guid><description>&lt;img src="https://example.com/p/karpenter-deep-dive/featured-image.webp" alt="Featured image of post Karpenter Deep Dive " />&lt;p>Recently, Karpenter graduated from AWS re:Invent with autoscaling of Nodes in Kubernetes clusters.&lt;/p>
&lt;p>In this article, we&amp;rsquo;ll take a deeper look at it.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>This is the 18th day of the [Kubernetes Advent Calendar 2021](&amp;lt;(&lt;a class="link" href="https://qiita.com/advent-calendar/2021/kubernetes%29%29" target="_blank" rel="noopener"
>https://qiita.com/advent-calendar/2021/kubernetes))&lt;/a>.&lt;/p>
&lt;h2 id="what-is-karpenter">What is Karpenter?&lt;/h2>
&lt;p>Officially described as &amp;ldquo;Just-in-time Nodes for Any Kubernetes Cluster&amp;rdquo;, Karpenter provides the ability to instantly provision new Nodes for unscheduled Pods. The goal is to improve the efficiency and cost of running workloads on Kubernetes clusters.&lt;/p>
&lt;p>Karpenter works as follows.&lt;/p>
&lt;ul>
&lt;li>Monitor Pods that the Kubernetes scheduler has marked as unschedulable&lt;/li>
&lt;li>Evaluate the following scheduling constraints as requested by the Pod
&lt;ul>
&lt;li>Resource Request&lt;/li>
&lt;li>Node Selector&lt;/li>
&lt;li>Affinity&lt;/li>
&lt;li>Tolerant&lt;/li>
&lt;li>Topology spreading constraints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Provisioning a Node to meet Pod requirements&lt;/li>
&lt;li>Scheduling a Pod to run on a new Node&lt;/li>
&lt;li>Deleting a Node when it is no longer needed&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>How to use Karpenter&lt;/p>
&lt;p>Karpenter will only support AWS as of December 2021.&lt;/p>
&lt;/blockquote>
&lt;h2 id="autoscale-in-kubernetes">Autoscale in Kubernetes&lt;/h2>
&lt;h3 id="pod">Pod&lt;/h3>
&lt;p>There are two ways to scale the Pod.&lt;/p>
&lt;h4 id="horizontal-pod-auto-scaler">Horizontal Pod Auto scaler&lt;/h4>
&lt;p>Horizontal pod scaling is a method of scaling to improve processing performance by increasing the number of pods. User-defined metrics such as CPU, memory, etc. can also be used to make decisions.&lt;/p>
&lt;p>The number of pods is calculated by the following formula.&lt;/p>
&lt;p>&lt;code>Number of replicas desired = ceil[&amp;lt;current number of pods&amp;gt; * (&amp;lt;current index value / &amp;lt;target index value&amp;gt;)]&lt;/code>.&lt;/p>
&lt;h4 id="vertical-pod-auto-scaler">Vertical Pod Auto scaler&lt;/h4>
&lt;p>This is a method of scaling that improves processing performance by increasing the resources available to the pod. In this case, the CPU and memory are used as criteria. It is more like optimizing the resource utilization.&lt;/p>
&lt;h3 id="node">Node&lt;/h3>
&lt;h4 id="cluster-auto-scaler">Cluster Auto scaler&lt;/h4>
&lt;p>It is a method of scaling to improve processing performance by increasing the number of worker Nodes. It can also be used in conjunction with horizontal scaling of Pods.&lt;/p>
&lt;h2 id="how-to-install">How to install&lt;/h2>
&lt;p>Karpenter will be installed on the cluster with Helm Chart.
Karpenter also requires IAM Roles for Service Accounts (IRSA).&lt;/p>
&lt;p>Currently, the utilities required to use Karpenter are as follows&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html" target="_blank" rel="noopener"
>AWS CLI&lt;/a>&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/" target="_blank" rel="noopener"
>the Kubernetes CLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>eksctl&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/eks/latest/userguide/eksctl.html" target="_blank" rel="noopener"
>the CLI for AWS EKS&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>helm&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://karpenter.sh/docs/getting-started/#install" target="_blank" rel="noopener"
>the package manager for Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>To learn how to install Karpenter on AWS, please refer to the official document &amp;ldquo;&lt;a class="link" href="https://karpenter.sh/docs/getting-started/#install" target="_blank" rel="noopener"
>Getting Started with Karpenter on AWS&lt;/a>&amp;rdquo;.&lt;/p>
&lt;p>Karpenter&amp;rsquo;s Helm Chart can be found &lt;a class="link" href="https://github.com/aws/karpenter/tree/main/charts/karpenter" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Installation with Terraform&lt;/p>
&lt;p>Kapenter also provides an installation method using &lt;a class="link" href="https://learn.hashicorp.com/tutorials/terraform/install-cli" target="_blank" rel="noopener"
>Terraform&lt;/a>. See &lt;a class="link" href="https://karpenter.sh/docs/getting-started-with-terraform/" target="_blank" rel="noopener"
>here&lt;/a> for details.&lt;/p>
&lt;/blockquote>
&lt;p>An overview diagram is shown in the figure below.&lt;/p>
&lt;p>&lt;img src="https://example.com/karpenter-overview.webp"
loading="lazy"
alt="Karpenter Overview"
>&lt;/p>
&lt;h2 id="configure-the-provisioner">Configure the provisioner&lt;/h2>
&lt;p>Karpenter&amp;rsquo;s job is to add Nodes that handle non-schedulable Pods, schedule Pods on those Nodes, and remove the Nodes when they are no longer needed.&lt;/p>
&lt;p>To configure Karpenter, create a provisioner that defines how Karpenter will manage non-schedulable Pods and timed Nodes.&lt;/p>
&lt;p>The following is what you need to know about Karpenter provisioners.&lt;/p>
&lt;h3 id="unschedulable-pods">Unschedulable pods&lt;/h3>
&lt;p>Karpenter will only attempt to provision Pods with the status condition &lt;code>Unschedulable=True&lt;/code>. This will be set when the kube-scheduler fails to schedule a Pod to an existing capacity.&lt;/p>
&lt;h3 id="provisioner-cr">Provisioner CR&lt;/h3>
&lt;p>Karpenter defines a custom resource called &lt;code>Provisioner&lt;/code> to specify the provisioning configuration.&lt;/p>
&lt;p>Each provisioner manages a separate set of Nodes, but a Pod can be scheduled to any provisioner that supports its scheduling constraints.&lt;/p>
&lt;p>A provisioner contains constraints that affect the Nodes that can be provisioned and the attributes of the Nodes (such as timers for removing Nodes).&lt;/p>
&lt;p>The following are the resources of the provisioner.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">karpenter.sh/v1alpha5&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Provisioner&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ttlSecondsUntilExpired&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2592000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ttlSecondsAfterEmpty&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">taints&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example.com/special-taint&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">effect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NoSchedule&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">billing-team&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-team&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requirements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node.kubernetes.io/instance-type&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;m5.large&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;m5.2xlarge&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;topology.kubernetes.io/zone&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;us-west-2a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;us-west-2b&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;kubernetes.io/arch&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;arm64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;amd64&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;karpenter.sh/capacity-type&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;spot&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;on-demand&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The &lt;code>spec.ttlSecondsUntilExpired&lt;/code> is the number of seconds the controller will wait before exiting the Node, measured from the time the Node is created. This is useful to eventually implement features like consistent Node upgrades, memory leak protection, and destructive testing. If this field is not set, termination due to expiration will be disabled.&lt;/p>
&lt;p>The &lt;code>spec.ttlSecondsAfterEmpty&lt;/code> is the number of seconds the controller will wait between the time it detects that a Node is empty and the time it tries to remove the Node. A Node is considered empty if there are no Pods scheduled for that Node, except for the daemonset.&lt;/p>
&lt;p>The &lt;code>spec.requirements&lt;/code> constrains the parameters of the provisioned Node. It can be combined with &lt;code>nodeAffinity&lt;/code> and &lt;code>nodeSelector&lt;/code>. The &lt;code>{ In, NotIn }&lt;/code> operator is supported to include or exclude values.&lt;/p>
&lt;h2 id="deprovisioning-node">Deprovisioning Node&lt;/h2>
&lt;p>Karpenter deletes the nodes that are no longer needed as follows.&lt;/p>
&lt;h3 id="finalizer">Finalizer&lt;/h3>
&lt;p>Karpenter will place a finalizer bit in each Node it creates.&lt;/p>
&lt;p>When a request to delete these Nodes comes in (such as a TTL or manual Node deletion via kubectl), Karpenter codes the Node, ejects all Pods, terminates the EC2 instance, and deletes the Node object.&lt;/p>
&lt;p>Karpenter handles all the cleanup work required to properly delete the Node.&lt;/p>
&lt;h3 id="node-expiry">Node Expiry&lt;/h3>
&lt;p>When a Node reaches its expiration value (&lt;code>ttlSecondsUntilExpired&lt;/code>), it will be ejected and removed from the Pod (even if it is still running a workload).&lt;/p>
&lt;h3 id="empty-nodes">Empty Nodes&lt;/h3>
&lt;p>When the last workload Pod running on a Karpenter-managed Node runs out, that Node will be given an &lt;code>emptiness&lt;/code> timestamp. When its &amp;ldquo;Node is empty&amp;rdquo; expiration date (&lt;code>ttlSecondsAfterEmpty&lt;/code>) is reached, finalization is triggered.&lt;/p>
&lt;blockquote>
&lt;p>About how to remove Node&lt;/p>
&lt;p>For more information on how Karpenter deletes Nodes, see &lt;a class="link" href="https://karpenter.sh/docs/tasks/deprov-nodes/" target="_blank" rel="noopener"
>Details&lt;/a> on Node deprovisioning.&lt;/p>
&lt;/blockquote>
&lt;h2 id="upgrade-node">Upgrade Node&lt;/h2>
&lt;p>An easy way to upgrade a Node is to set &lt;code>ttlSecondsUntilExpired&lt;/code>, which will expire after a set period of time and be replaced by a newer Node.&lt;/p>
&lt;h2 id="constraints">Constraints&lt;/h2>
&lt;p>Because there are no constraints defined by the provisioner or requested by the Pod being deployed, Karpenter is selected from the entire set of features available from the cloud provider. Nodes can be created using any instance type and run in any zone.&lt;/p>
&lt;h2 id="scheduling">Scheduling&lt;/h2>
&lt;p>Karpenter schedules Pods that are marked as &lt;code>unschedulable&lt;/code> by the Kubernetes scheduler. After resolving scheduling constraints and startup capacity, it creates a Node and binds the Pod. This stateless approach will help you avoid race conditions and improve performance. If there is a problem with a launched Node, Kubernetes will automatically migrate the Pod to a new Node. When Karpenter launches a Node, it will also allow Kubernetes' scheduler to schedule on it.&lt;/p>
&lt;h2 id="cloud-provider">Cloud provider&lt;/h2>
&lt;p>Karpenter makes a request to the relevant cloud provider for provisioning a new Node. The first supported cloud provider is AWS, but Karpenter is designed to work with other cloud providers as well. While using the well-known labels of Kubernetes, the provisioner can set a number of values specific to the cloud provider.&lt;/p>
&lt;p>If you are developing your own provider, you can create it in the repository under &lt;code>pkg/cloudprovider/&lt;/code>. The directory structure is as follows. The &lt;code>fake&lt;/code> directory is provided as an example for reference.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">.
├── aws
│   ├── apis
│   │   └── v1alpha1
│   └── fake
├── fake
├── metrics
└── registry
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>First, you need to create the following files for each cloud provider under &lt;code>pkg/cloudprovider/registry&lt;/code> to register them.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="c1">// +build &amp;lt;YOUR_PROVIDER_NAME&amp;gt;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;github.com/aws/karpenter/pkg/cloudprovider/&amp;lt;YOUR_PROVIDER_NAME&amp;gt;&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewCloudProvider&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">cloudprovider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CloudProvider&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">YOUR_PROVIDER_NAME&lt;/span>&lt;span class="p">&amp;gt;.&lt;/span>&lt;span class="nf">NewCloudProvider&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can also create one for each cloud provider under &lt;code>pkg/cloudprovider&lt;/code> for your environment. If you check the &lt;code>fake&lt;/code> directory, you will find the following files. You can add other necessary information according to your environment.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">.
├── cloudprovider.go
└── instancetype.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="difference-from-cluster-auto-scaler">Difference from Cluster Auto scaler&lt;/h2>
&lt;p>Like Karpenter, the Kubernetes Cluster Auto scaler is designed to add Nodes when a request comes in to run a Pod that cannot be handled by the current capacity.
Cluster Auto scaler is part of the Kubernetes project and is implemented by most of the major Kubernetes cloud providers. By rethinking provisioning, Karpenter provides the following improvements.&lt;/p>
&lt;h3 id="designed-to-take-advantage-of-the-flexibility-of-the-cloud">Designed to take advantage of the flexibility of the cloud&lt;/h3>
&lt;p>Karpenter has the ability to efficiently handle any type of instance available in AWS. Cluster Autoscaler was not originally built with the flexibility to support hundreds of instance types, zones, and purchase options.&lt;/p>
&lt;h3 id="group-less-node-provisioning">Group less Node Provisioning&lt;/h3>
&lt;p>Karpenter manages each instance directly, without orchestration mechanisms such as Node groups. This allows you to retry in milliseconds instead of minutes if capacity is not available. It also allows you to take advantage of a variety of instance types, availability zones, and purchasing options without having to create hundreds of Node groups.&lt;/p>
&lt;h3 id="scheduling-implementation">Scheduling Implementation&lt;/h3>
&lt;p>Cluster Autoscaler does not bind a Pod to the Node it creates. Instead, it relies on the &lt;code>kube-scheduler&lt;/code> to make the same scheduling decision after the Node comes online. The Node started by Karpenter is bound to its Pod immediately. kubelet&lt;code> does not need to wait for the scheduler or Node to be ready. kubelet&lt;/code> does not need to wait for the scheduler or Node to be ready, it can start preparing the container runtime immediately, including pre-pulling images. This can reduce the Node startup latency by a few seconds.&lt;/p>
&lt;h2 id="thoughts">Thoughts&lt;/h2>
&lt;p>In this article, I&amp;rsquo;ve tried to dig a little deeper into Karpenter.&lt;/p>
&lt;p>Personally, I think it&amp;rsquo;s the same as GKE Autopilot&amp;rsquo;s dynamic Node provisioning process. I think Karpenter is an OSS version of that tool. Like GKE Autopilot, Karpenter observes the specification of non-schedulable pods, computes aggregate resource requests, and sends the requests to an underlying compute service (such as Amazon EC2) that has the capacity required to run all the pods.&lt;/p>
&lt;p>Karpenter also allows you to define custom resources and specify the provisioning configuration for the following Nodes. We found the flexibility to change the configuration to be a significant advantage.&lt;/p>
&lt;ul>
&lt;li>Instance size/type, topology (zone, etc.)&lt;/li>
&lt;li>Architecture (arm64, amd64, etc.)&lt;/li>
&lt;li>Lifecycle type (spot, on-demand, pre-emptive, etc.)&lt;/li>
&lt;/ul>
&lt;p>On the other hand, Karpenter can also deprovision a Node when it is no longer needed. This can be determined by setting the Node&amp;rsquo;s expiration date (&lt;code>ttlSecondsUntilExpired&lt;/code>) or when the last workload running on a Karpenter provisioned Node has finished (&lt;code>ttlSecondsAfterEmpty&lt;/code>). Either of these two events triggers a finalization that codes the Node, ejects the Pod, terminates the underlying compute resource, and deletes the Node object. This deprovisioning feature can also be used to keep Node up-to-date with the latest AMI.&lt;/p>
&lt;p>With Karpenter, I believe you can offload Node provisioning, autoscaling and upgrading and focus on running your application. Karpenter works with all kinds of Kubernetes applications, but I think it performs especially well in use cases where large amounts of diverse compute resources need to be provisioned and de-provisioned quickly. (Training machine learning models, running simulations, batch jobs with complex financial calculations, etc.)&lt;/p>
&lt;p>Currently, it only runs on AWS, but we will keep an eye on it in the future. If I have time, I&amp;rsquo;ll try to implement it on other clouds as well.&lt;/p></description></item><item><title>Karpenter を調べてみた</title><link>https://example.com/p/karpenter-%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://example.com/p/karpenter-%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>&lt;img src="https://example.com/p/karpenter-%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F/featured-image.webp" alt="Featured image of post Karpenter を調べてみた" />&lt;p>先日、AWS re:Invent にて Kubernetes クラスターで Node の自動スケーリングをする Karpenter が GA になりました.&lt;/p>
&lt;p>今回は、それについて深堀りしてみます.&lt;/p>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>これは &lt;a class="link" href="https://qiita.com/advent-calendar/2021/kubernetes" target="_blank" rel="noopener"
>Kubernetes Advent Calendar 2021&lt;/a> 18 日目の記事です.&lt;/p>
&lt;h2 id="karpenter-とは">Karpenter とは&lt;/h2>
&lt;p>Karpenter は、&lt;strong>「Just-in-time Nodes for Any Kubernetes Cluster」&lt;/strong> と公式で記載されている通り、スケジュールが不能な Pod に対して、瞬時に新しい Node をプロビジョニングする機能を提供します. それにより、Kubernetes クラスター上でワークロードを実行する際の効率とコスト改善をゴールとしています.&lt;/p>
&lt;p>Karpenter の動作は以下の通りになります.&lt;/p>
&lt;ul>
&lt;li>Kubernetes スケジューラがスケジューリング不能とマークした Pod を監視する&lt;/li>
&lt;li>Pod から要求された以下のスケジューリング制約の評価
&lt;ul>
&lt;li>リソース要求&lt;/li>
&lt;li>Node セレクタ&lt;/li>
&lt;li>アフィニティ&lt;/li>
&lt;li>トレラント&lt;/li>
&lt;li>トポロジー拡散制約&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pod の要件を満たす Node のプロビジョニング&lt;/li>
&lt;li>新しい Node で実行する Pod のスケジューリング&lt;/li>
&lt;li>Node が不要になったら削除する&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Karpenter の利用方法について&lt;/p>
&lt;p>Karpenter は 2021 年 12 月 現在、AWS のみをサポートしています.&lt;/p>
&lt;/blockquote>
&lt;h2 id="kubernetes-におけるオートスケール">Kubernetes におけるオートスケール&lt;/h2>
&lt;p>Kubernetes には、Pod と Node それぞれにオートスケールする機能が提供されています.&lt;/p>
&lt;h3 id="pod">Pod&lt;/h3>
&lt;p>Pod には、以下の 2 種類のスケール方法があります.&lt;/p>
&lt;h4 id="水平スケール-horizontal-pod-autoscaler">水平スケール (Horizontal Pod Autoscaler)&lt;/h4>
&lt;p>Pod の水平スケールは、Pod 数を増やすことにより処理性能を向上させるスケール方法です. CPU やメモリなど、ユーザが独自に設定したメトリクスなども判断の材料として使えます.&lt;/p>
&lt;p>Pod 数は以下の計算式で算出されます.&lt;/p>
&lt;p>&lt;code>希望するレプリカ数 = ceil[&amp;lt;現在の Pod数&amp;gt; * (&amp;lt;現在の指標値 / &amp;lt;ターゲットとする指標値&amp;gt;)]&lt;/code>&lt;/p>
&lt;h4 id="垂直スケール-vertical-pod-autoscaler">垂直スケール (Vertical Pod Autoscaler)&lt;/h4>
&lt;p>Pod が利用可能なリソースを増やすことで処理性能を向上させるスケール方法です. こちらは、CPU やメモリを判断材料に使用します. どちらかと言うとリソース使用率の最適化を行っているイメージです.&lt;/p>
&lt;h3 id="node">Node&lt;/h3>
&lt;h4 id="node-の水平オートスケーラー-cluster-autoscaler">Node の水平オートスケーラー (Cluster Autoscaler)&lt;/h4>
&lt;p>ワーカー Node の台数を増やすことによって処理性能を向上させるスケール方法です. Pod の水平スケールなどと連携することも可能です.&lt;/p>
&lt;h2 id="インストール方法">インストール方法&lt;/h2>
&lt;p>Karpenter は、Helm Chart でクラスタにインストールされます.
Karpenter はさらに、IAM Roles for Service Accounts (IRSA)を必要とします.&lt;/p>
&lt;p>現在、Karpenter を使用する際に必要なユーティリティは以下の通りです.&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html" target="_blank" rel="noopener"
>AWS CLI&lt;/a>&lt;/li>
&lt;li>&lt;code>kubectl&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/" target="_blank" rel="noopener"
>the Kubernetes CLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>eksctl&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.aws.amazon.com/eks/latest/userguide/eksctl.html" target="_blank" rel="noopener"
>the CLI for AWS EKS&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>helm&lt;/code>
&lt;ul>
&lt;li>&lt;a class="link" href="https://karpenter.sh/docs/getting-started/#install" target="_blank" rel="noopener"
>the package manager for Kubernetes&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>AWS への Karpenter のインストール方法は、&lt;a class="link" href="https://karpenter.sh/docs/getting-started/#install" target="_blank" rel="noopener"
>こちら&lt;/a>の公式ドキュメントの &lt;strong>「Getting Started with Karpenter on AWS」&lt;/strong> を参考にすると良いと思います.&lt;/p>
&lt;p>Karpenter の Helm Chart は&lt;a class="link" href="https://github.com/aws/karpenter/tree/main/charts/karpenter" target="_blank" rel="noopener"
>こちら&lt;/a>から確認することができます.&lt;/p>
&lt;blockquote>
&lt;p>Terraform を用いたインストール&lt;/p>
&lt;p>&lt;a class="link" href="https://learn.hashicorp.com/tutorials/terraform/install-cli" target="_blank" rel="noopener"
>Terraform&lt;/a> を使用したインストール方法もあります.詳しくは&lt;a class="link" href="https://karpenter.sh/docs/getting-started-with-terraform/" target="_blank" rel="noopener"
>こちら&lt;/a>を参照してください.&lt;/p>
&lt;/blockquote>
&lt;p>概要図は下図の通りです。&lt;/p>
&lt;p>&lt;img src="https://example.com/karpenter-overview.webp"
loading="lazy"
alt="Karpenter Overview"
>&lt;/p>
&lt;h2 id="プロビジョナーの設定">プロビジョナーの設定&lt;/h2>
&lt;p>Karpenter の仕事は、スケジュールできない Pod を処理する Node を追加し、その Node で Pod をスケジュールし、不要になったら Node を削除することです.&lt;/p>
&lt;p>Karpenter を設定するには、Karpenter がスケジューリング不能な Pod と期限付き Node を管理する方法を定義するプロビジョナーを作成します.&lt;/p>
&lt;p>以下は、Karpenter のプロビジョナーについて知っておくと良いと思います.&lt;/p>
&lt;h3 id="unschedulable-pods">Unschedulable pods&lt;/h3>
&lt;p>Karpenter は、ステータス条件 &lt;code>Unschedulable=True&lt;/code> を持つ Pod のみをプロビジョニングしようとします. これは、kube-scheduler が既存の容量に Pod をスケジュールすることに失敗したときに設定されます.&lt;/p>
&lt;h3 id="provisioner-cr">Provisioner CR&lt;/h3>
&lt;p>Karpenter では、プロビジョニング構成を指定するために、&lt;code>Provisioner&lt;/code> というカスタムリソースを定義しています.&lt;/p>
&lt;p>各プロビジョナーは個別の Node セットを管理しますが、Pod はそのスケジューリング制約をサポートする任意のプロビジョナーにスケジュールすることができます.&lt;/p>
&lt;p>プロビジョナーには、プロビジョニング可能な Node と Node の属性（Node を削除するためのタイマーなど）に影響を与える制約が含まれています.&lt;/p>
&lt;p>以下が プロビジョナーのリソースになります.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">karpenter.sh/v1alpha5&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Provisioner&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">default&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ttlSecondsUntilExpired&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2592000&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ttlSecondsAfterEmpty&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">taints&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example.com/special-taint&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">effect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NoSchedule&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">billing-team&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-team&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requirements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node.kubernetes.io/instance-type&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;m5.large&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;m5.2xlarge&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;topology.kubernetes.io/zone&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;us-west-2a&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;us-west-2b&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;kubernetes.io/arch&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;arm64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;amd64&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;karpenter.sh/capacity-type&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;spot&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;on-demand&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>spec.ttlSecondsUntilExpired&lt;/code>は、コントローラが Node を終了するまでに待つ秒数で、Node の作成時から計測されます. これは、最終的に一貫した Node アップグレード、メモリリーク保護、破壊テストのような機能を実装するのに便利です. このフィールドが設定されていない場合、有効期限切れによる終了は無効になります.&lt;/p>
&lt;p>&lt;code>spec.ttlSecondsAfterEmpty&lt;/code>は、Node が空になったことを検出した時点から、コントローラが Node を削除しようとするまでに待つ秒数です. Node は、デーモンセットを除いて、その Node にスケジュールされている Pod がない場合、空であると見なされます.&lt;/p>
&lt;p>&lt;code>spec.requirements&lt;/code>は、プロビジョニングされた Node のパラメータを制約します. &lt;code>nodeAffinity&lt;/code> や &lt;code>nodeSelector&lt;/code> と組み合わせることも可能です. 演算子 &lt;code>{ In, NotIn }&lt;/code> は、値を含めたり除外したりするためにサポートされています.&lt;/p>
&lt;h2 id="node-のデプロビジョニング">Node のデプロビジョニング&lt;/h2>
&lt;p>Karpenter では、不要になった Node を以下のように削除しています.&lt;/p>
&lt;h3 id="finalizer">Finalizer&lt;/h3>
&lt;p>Karpenter は、作成する各 Node にファイナライザービットを配置します。&lt;/p>
&lt;p>これらの Node を削除するリクエスト（TTL や手動での kubectl による Node 削除など）が来ると、Karpenter は Node をコード化し、すべての Pod を排出して EC2 インスタンスを終了させ、Node オブジェクトを削除する.&lt;/p>
&lt;p>Karpenter は、Node を適切に削除するために必要なすべてのクリーンアップ作業を処理します.&lt;/p>
&lt;h3 id="node-expiry">Node Expiry&lt;/h3>
&lt;p>Node の有効期限値 (&lt;code>ttlSecondsUntilExpired&lt;/code>)に達すると、その Node は（まだワークロードを実行していても）Pod から排出され、削除されます.&lt;/p>
&lt;h3 id="empty-nodes">Empty Nodes&lt;/h3>
&lt;p>Karpenter が管理する Node で稼働している最後のワークロード Pod がなくなると、その Node には &lt;code>emptiness&lt;/code> タイムスタンプが付与されます。その「Node が空になる」有効期限 (&lt;code>ttlSecondsAfterEmpty&lt;/code>) 達すると、ファイナライズがトリガーされます.&lt;/p>
&lt;blockquote>
&lt;p>Node を削除する方法について&lt;/p>
&lt;p>Karpenter が Node を削除する方法の詳細については、Node のデプロビジョニングの&lt;a class="link" href="https://karpenter.sh/docs/tasks/deprov-nodes/" target="_blank" rel="noopener"
>詳細&lt;/a>を参照してください.&lt;/p>
&lt;/blockquote>
&lt;h2 id="node-のアップグレード">Node のアップグレード&lt;/h2>
&lt;p>Node をアップグレードする簡単な方法は、&lt;code>ttlSecondsUntilExpired&lt;/code> を設定することです。Node は設定された期間後に終了し、より新しい Node と入れ替わります.&lt;/p>
&lt;h2 id="制約条件">制約条件&lt;/h2>
&lt;p>プロビジョナーで定義された制約や、デプロイされる Pod から要求された制約がないため、Karpenter はクラウドプロバイダが利用できる機能全体から選択されます. Node は、任意のインスタンスタイプを使用して作成し、任意のゾーンで実行することができます.&lt;/p>
&lt;h2 id="スケジューリング">スケジューリング&lt;/h2>
&lt;p>Karpenter は、Kubernetes のスケジューラーが &lt;code>unschedulable&lt;/code> とマークした Pod をスケジュールします. スケジューリング制約と起動容量を解決した後、Node を作成し、Pod をバインドします. このステートレスなアプローチは、レースコンディションを回避し、パフォーマンスを向上させるのに役立ちます. 起動した Node に何か問題があれば、Kubernetes は自動的に新しい Node に Pod を移行します.Karpenter が Node を立ち上げると、その Node は Kubernetes のスケジューラーがその上でをスケジュールすることも可能になります.&lt;/p>
&lt;h2 id="クラウドプロバイダー">クラウドプロバイダー&lt;/h2>
&lt;p>Karpenter は、関連するクラウドプロバイダーに新しい Node のプロビジョニングの要求を行います. 最初にサポートされるクラウドプロバイダーは AWS ですが、Karpenter は他のクラウドプロバイダーでも動作するように設計されています. Kubernetes のよく知られたラベルを使用しながら、プロビジョナーは、クラウドプロバイダーに固有のいくつかの値を設定することができます.&lt;/p>
&lt;p>個人でプロバイダーの開発する場合は、リポジトリの&lt;code>pkg/cloudprovider/&lt;/code>配下に作成します. ディレクトリ構造は以下の通りです. &lt;code>fake&lt;/code>ディレクトリは、参考例として用意されています.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">.
├── aws
│   ├── apis
│   │   └── v1alpha1
│   └── fake
├── fake
├── metrics
└── registry
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>まず、&lt;code>pkg/cloudprovider/registry&lt;/code>配下で、クラウドプロバイダー毎に以下の以下のファイルを作成することで登録ができます.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-golang" data-lang="golang">&lt;span class="c1">// +build &amp;lt;YOUR_PROVIDER_NAME&amp;gt;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;github.com/aws/karpenter/pkg/cloudprovider/&amp;lt;YOUR_PROVIDER_NAME&amp;gt;&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewCloudProvider&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">cloudprovider&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CloudProvider&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">YOUR_PROVIDER_NAME&lt;/span>&lt;span class="p">&amp;gt;.&lt;/span>&lt;span class="nf">NewCloudProvider&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>また、&lt;code>pkg/cloudprovider&lt;/code>配下で、クラウドプロバイダーごとに環境に合わせて作成します. &lt;code>fake&lt;/code> ディレクトリを確認すると以下のファイルが用意されています. その他の必要な情報は環境に合わせて追加すると良いです.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">.
├── cloudprovider.go
└── instancetype.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="cluster-autoscaler-との違い">Cluster Autoscaler との違い&lt;/h2>
&lt;p>Karpenter と同様に、Kubernetes Cluster Autoscaler は、現在のキャパシティでは対応できない Pod の実行要求が来たときに、Node を追加するように設計されています.
Cluster Autoscaler は Kubernetes プロジェクトの一部であり、ほとんどの主要な Kubernetes クラウドプロバイダーが実装しています. プロビジョニングを見直すことで、Karpenter は以下の改善を提供しています.&lt;/p>
&lt;h3 id="クラウドの柔軟性を活かした設計">クラウドの柔軟性を活かした設計&lt;/h3>
&lt;p>Karpenter は、AWS で利用できるあらゆる種類のインスタンスに効率的に対応できる能力を備えています. Cluster Autoscaler は、もともと何百ものインスタンスタイプ、ゾーン、購入オプションに対応できるような柔軟性を持って構築されたものではありません.&lt;/p>
&lt;h3 id="グループレスの-node-プロビジョニング">グループレスの Node プロビジョニング&lt;/h3>
&lt;p>Karpenter は、Node グループのようなオーケストレーションの仕組みを使わずに、各インスタンスを直接管理します. これにより、キャパシティが利用できない場合、数分ではなくミリ秒単位で再試行することができます. また、何百もの Node グループを作成することなく、多様なインスタンスタイプ、アベイラビリティゾーン、および購入オプションを活用することができます.&lt;/p>
&lt;h3 id="スケジューリングの実施">スケジューリングの実施&lt;/h3>
&lt;p>Cluster Autoscaler は、作成した Node に Pod をバインドしません. その代わり、Node がオンラインになった後に同じスケジューリング決定を行うために &lt;code>kube-scheduler&lt;/code> に依存します.Karpenter が起動した Node には、すぐにその Pod がバインドされます。kubelet` はスケジューラーや Node の準備が整うのを待つ必要がありません. イメージの事前プルも含め、コンテナランタイムの準備をすぐに開始できます.これにより、Node の起動レイテンシを数秒短縮することができます.&lt;/p>
&lt;h2 id="所感">所感&lt;/h2>
&lt;p>今回は、Karpenter について少し深堀りしてみました.&lt;/p>
&lt;p>個人的には、GKE Autopilot の動的 Node プロビジョニングプロセスと同じなのかなと思っています. Karpenter はそのツールの OSS 版と言えると思います. GKE Autopilot と同様に、Karpenter はスケジューリング不能な Pod の仕様を観測し、集約されたリソース要求を計算し、すべての Pod の実行に必要な容量を持つ基礎的な計算サービス（Amazon EC2 など）に要求を送信します.&lt;/p>
&lt;p>また、Karpenter では、カスタムリソースを定義して、以下の Node のプロビジョニング構成を指定することができます. 構成を柔軟に変更できる点は、かなり大きいメリットだと感じました.&lt;/p>
&lt;ul>
&lt;li>インスタンスサイズ/タイプ、トポロジー(ゾーンなど)&lt;/li>
&lt;li>アーキテクチャ(arm64、amd64 など)&lt;/li>
&lt;li>ライフサイクルタイプ(スポット、オンデマンド、プリエンプティブなど)&lt;/li>
&lt;/ul>
&lt;p>一方、Karpenter は、Node が不要になった場合、デプロビジョンを行うこともできます. これは、Node の有効期限設定 (&lt;code>ttlSecondsUntilExpired&lt;/code>) または Karpenter プロビジョニングされた Node 上で実行されている最後のワークロードが終了したとき (&lt;code>ttlSecondsAfterEmpty&lt;/code>) に決定することができます. この 2 つのイベントのどちらかがトリガーとなり、Node をコード化し、Pod を排出し、基盤となるコンピュートリソースを終了させ、Node オブジェクトを削除するファイナライゼーションが行われます. このデプロビジョニング機能は、Node を最新の AMI で最新の状態に保つためにも使用できます.&lt;/p>
&lt;p>Karpenter を使えば、Node のプロビジョニング、オートスケール、アップグレードをオフロードして、アプリケーションの実行に集中することができると思います. Karpenter はあらゆる種類の Kubernetes アプリケーションで動作しますが、特に、大量の多様な計算リソースを迅速にプロビジョニングおよびデプロビジョニングする必要があるユースケースで優れたパフォーマンスを発揮すると思います. (機械学習モデルのトレーニング、シミュレーションの実行、複雑な金融計算を行うバッチジョブなど)&lt;/p>
&lt;p>現在は、AWS のみでしか動作しませんが今後の動向には注目していきたいと思います. また、時間があれば他クラウドへの実装などもしてみようと思います.&lt;/p></description></item><item><title>Google Authenticator からの引き継ぎ方法</title><link>https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/</guid><description>&lt;img src="https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/featured-image.webp" alt="Featured image of post Google Authenticator からの引き継ぎ方法" />&lt;p>Google Authenticator の機種変更時の引き継ぎ方法について説明します.&lt;/p>
&lt;p>また、個人的に推奨している Microsoft Authenticator についても解説します.&lt;/p>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>近年、セキュリティの強化として&lt;strong>2 段階認証の導入&lt;/strong>が推奨され、多くの方が SMS 認証や Google Authenticator などの認証アプリケーションをスマートフォンなどにインストールしているかと思います.&lt;/p>
&lt;p>しかし、認証アプリは機種変更などをした際に正しい引き継ぎ手順を踏まなければ、認証アプリにログインできなくなります.それによって苦汁を舐めた人たちも多くいるのではないでしょうか.&lt;/p>
&lt;p>そのような事態にならないためにも、正しい手順を理解し、スムーズに引き継げるようにしましょう.&lt;/p>
&lt;h2 id="そもそも-2-段階認証って">そもそも 2 段階認証って？&lt;/h2>
&lt;p>2 段階認証はその名の通り、「&lt;strong>2 度の認証を行う&lt;/strong>」ことです. 従来の 1 つの認証方法を使うよりはるかにセキュアに管理する事ができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/2-factor.drawio.png"
width="933"
height="481"
srcset="https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/2-factor.drawio_hu0be6825a52e1ac9ac07d7b1e1c7e12e6_82494_480x0_resize_box_3.png 480w, https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/2-factor.drawio_hu0be6825a52e1ac9ac07d7b1e1c7e12e6_82494_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="2-factor overview"
class="gallery-image"
data-flex-grow="193"
data-flex-basis="465px"
>&lt;/p>
&lt;p>2 段階認証には、様々な方法があります.&lt;/p>
&lt;ul>
&lt;li>SMS, メールなどを用いる場合
&lt;ul>
&lt;li>認証サーバなどで特定の文字列などが発行され、送信されます. ユーザはそれを画面上で入力します.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>2 段階認証アプリケーションを用いる場合
&lt;ul>
&lt;li>アプリケーション上でワンタイムのセキュリティコードが自動的に生成され、そのコードを画面上に入力します.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>※ 2 段階認証アプリは別名、TOTP (Time-based One-Time Password) アプリとも呼ばれます.&lt;/p>
&lt;h2 id="2-段階認証を扱う上での注意点">2 段階認証を扱う上での注意点&lt;/h2>
&lt;p>いくらセキュアな機能だとしても注意するべき点はいくつかあります.&lt;/p>
&lt;p>2 段階目の認証として最も利用されているのはスマートフォンだと思います. スマートフォンの電話番号宛に SMS が届き、そのコードを利用したり、キャリアメールアドレスに送られるコードを利用したりするため、スマートフォンの紛失・盗難時にログインできなくなります.&lt;/p>
&lt;p>これは、ワンタイムパスワードを用いる場合も同じことが言えます.&lt;/p>
&lt;p>Google Authenticator を利用している場合は、スマートフォンにインストールして利用しているため、紛失・盗難時には同じくログインすることができません.&lt;/p>
&lt;p>また、スマートフォンの機種を変更した場合も引き継ぎを正しく行っていなければアプリケーションをインストールしても復元することができません.&lt;/p>
&lt;p>これらを回避する方法としては以下の通りです.&lt;/p>
&lt;ul>
&lt;li>複数の認証方法を設定しておく
&lt;ul>
&lt;li>SMS + 2 段階認証アプリケーション&lt;/li>
&lt;li>2 段階認証アプリケーション + メール&lt;/li>
&lt;li>etc&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>引き継ぎの際、2 段階認証の設定を無効化(解除)しておく&lt;/li>
&lt;/ul>
&lt;h2 id="引き継ぎ方法-google-authenticator">引き継ぎ方法 (Google Authenticator)&lt;/h2>
&lt;p>Google Authenticator を新しいデバイスへ引き継ぐ方法について解説します.&lt;/p>
&lt;p>以前までは、アプリケーションに登録している 2 段階認証を全て無効化する必要がありましたが、現在は引き継ぐ前のデバイスでアカウント情報をエクスポートし、
それを新しいデバイスでインポートすることでアカウントを移行することができます.&lt;/p>
&lt;p>&lt;img src="https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/authenticaton-takeover.drawio.png"
width="397"
height="219"
srcset="https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/authenticaton-takeover.drawio_hu6e9d285a71dedaa8aaa2db7daab1e95d_83942_480x0_resize_box_3.png 480w, https://example.com/p/google-authenticator-%E3%81%8B%E3%82%89%E3%81%AE%E5%BC%95%E3%81%8D%E7%B6%99%E3%81%8E%E6%96%B9%E6%B3%95/authenticaton-takeover.drawio_hu6e9d285a71dedaa8aaa2db7daab1e95d_83942_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Authentication takeover"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="435px"
>&lt;/p>
&lt;p>それぞれのデバイスでの手順は以下の通りです.&lt;/p>
&lt;h3 id="ios">iOS&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>移行前のデバイス&lt;/p>
&lt;ol>
&lt;li>Google Authenticator を起動&lt;/li>
&lt;li>起動したアプリケーションの右上のメニューボタン&lt;code>...&lt;/code>をタップし、「&lt;strong>アカウントのエクスポート&lt;/strong>」を選択&lt;/li>
&lt;li>エクスポート画面で、右下「&lt;strong>続行&lt;/strong>」ボタンをタップ&lt;/li>
&lt;li>指紋認証、FaceID、または端末に設定している PIN（パスコード）を入力して本人確認を実行&lt;/li>
&lt;li>移行させるアカウントを選択して、「&lt;strong>エクスポート&lt;/strong>」をタップ&lt;/li>
&lt;li>移行用 QR コードが表示されたら準備完了&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>新しいデバイス&lt;/p>
&lt;ol>
&lt;li>Google Authenticator を起動し、「&lt;strong>開始&lt;/strong>」をタップ&lt;/li>
&lt;li>左下「&lt;strong>既存のアカウントをインポートしますか？&lt;/strong>」をタップ&lt;/li>
&lt;li>右下「&lt;strong>QR コードをスキャン&lt;/strong>」をタップ&lt;/li>
&lt;li>エクスポート時に作成した移行用 QR コードを読み込む&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="android">Android&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>移行前のデバイス&lt;/p>
&lt;ol>
&lt;li>Google Authenticator を起動&lt;/li>
&lt;li>起動したアプリケーションの右上のメニューボタン&lt;code>...&lt;/code>をタップし、「&lt;strong>アカウントの移行&lt;/strong>」を選択&lt;/li>
&lt;li>エクスポート画面で、右下「&lt;strong>アカウントのエクスポート&lt;/strong>」ボタンをタップ&lt;/li>
&lt;li>本人確認を実行&lt;/li>
&lt;li>「&lt;strong>次へ&lt;/strong>」をタップ&lt;/li>
&lt;li>移行用 QR コードが表示されたら準備完了&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>新しいデバイス&lt;/p>
&lt;ol>
&lt;li>Google Authenticator を起動し、「&lt;strong>使ってみる&lt;/strong>」をタップ&lt;/li>
&lt;li>左下「&lt;strong>既存のアカウントをインポートしますか？&lt;/strong>」をタップ&lt;/li>
&lt;li>右下「&lt;strong>QR コードをスキャン&lt;/strong>」をタップ&lt;/li>
&lt;li>エクスポート時に作成した移行用 QR コードを読み込む&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>上記の手順を実行後、「&lt;strong>インポート完了&lt;/strong>」と表示されれば引き継ぎは完了です.&lt;/p>
&lt;h2 id="microsoft-authenticator-の利用">Microsoft Authenticator の利用&lt;/h2>
&lt;p>上記では Google Authenticator を解説しましたが、私は&lt;strong>Microsoft Authenticator&lt;/strong>を使用しています.&lt;/p>
&lt;p>理由としては以下の通りです.&lt;/p>
&lt;ul>
&lt;li>バックアップ機能が搭載されていない&lt;/li>
&lt;li>登録されているアプリケーションを並び替えると UI が壊れる
&lt;ul>
&lt;li>同一アプリケーションが複数表示される (誤って消すと両方とも消える)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>スマートフォン・アプリケーションでしか利用できない&lt;/li>
&lt;/ul>
&lt;p>非常にシンプルなのですが、UI が壊れるのも耐え難く、最大の理由としては「&lt;strong>バックアップ機能が搭載されていない&lt;/strong>」という点です. 万が一、デバイスが起動しなくなった際の再設定などの手間を考えると、あまり使いやすいとは言えません.&lt;/p>
&lt;p>一方で、Microsoft Authenticator だと、Microsoft アカウントをアプリと同期することでバックアップが可能です. 詳しい方法に関しては、&lt;a class="link" href="https://support.microsoft.com/ja-jp/account-billing/%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A7%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E8%B3%87%E6%A0%BC%E6%83%85%E5%A0%B1%E3%82%92%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E3%81%8A%E3%82%88%E3%81%B3authenticator%E3%81%99%E3%82%8B-bb939936-7a8d-4e88-bc43-49bc1a700a40" target="_blank" rel="noopener"
>こちら&lt;/a>を参照ください.&lt;/p>
&lt;p>&lt;strong>※ iOS 版では iCloud でバックアップを行うため、iCloud のアカウントが必要となります.&lt;/strong>&lt;/p>
&lt;p>しかし、Microsoft Authenticator も Google Authenticator と同じく、スマートフォン・アプリケーションでしか利用できません. 「PC でも使用したい！」と言う方は、&lt;a class="link" href="https://www.twilio.com/ja/" target="_blank" rel="noopener"
>Twilio&lt;/a>社の&lt;code>Authy&lt;/code>を使用することをおすすめします.&lt;/p>
&lt;p>&lt;strong>※ Authy を利用する場合は、別途 Authy のアカウントを作成する必要があります.&lt;/strong>&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>今回は、2 段階認証の仕組みと、認証アプリケーションの引き継ぎ方法などについて解説しました.&lt;/p>
&lt;p>2 段階認証アプリケーションを使用することで、アカウントの情報をよりセキュアに管理することができる反面、きちんと管理する必要があります. 特に 2 段階認証設定後の&lt;strong>バックアップコード&lt;/strong>の管理には十分、注意してください.&lt;/p>
&lt;p>実体が無いとは言え、重要な資産なので、この記事を参考に大切に保管しましょう.&lt;/p></description></item><item><title>使用しているデバイスについて</title><link>https://example.com/p/%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate><guid>https://example.com/p/%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>&lt;img src="https://example.com/p/%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/featured-image.webp" alt="Featured image of post 使用しているデバイスについて" />&lt;p>個人で使用しているデバイスの詳細情報について説明します.&lt;/p>
&lt;h2 id="macbook-pro-13-inch-2019">Macbook Pro (13-inch, 2019)&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">項目&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td>macOS 12.2 21D49 x86_64&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">CPU&lt;/td>
&lt;td>Intel i7-8569U (8) @ 2.80GHz&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">GPU&lt;/td>
&lt;td>Intel Iris Plus Graphics 655&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Memory&lt;/td>
&lt;td>16 GB 2133 MHz LPDDR3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal&lt;/td>
&lt;td>iTerm2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal Font&lt;/td>
&lt;td>FiraCodeNerdFontComplete-Regular&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Shell&lt;/td>
&lt;td>zsh 5.8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="pc">PC&lt;/h2>
&lt;p>使用している PC には、3 つの OS がインストールされています。&lt;/p>
&lt;h3 id="共通-desktop">共通 (Desktop)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">項目&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">Motherboard&lt;/td>
&lt;td>ROG STRIX H370-F GAMING (ASUSTeK COMPUTER INC.)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">CPU&lt;/td>
&lt;td>Intel(R) Core(TM) i5-8500 CPU @ 3.00GHz&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">GPU&lt;/td>
&lt;td>NVIDIA GeForce GTX 1060 6GB (MSI Co., Ltd.)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Memory&lt;/td>
&lt;td>DDR4-2666MHz 8×4GB (Corsair Inc.)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Storage(OS)&lt;/td>
&lt;td>Crucial MX500 500×2GB (Micron Technology, Inc.)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Storage&lt;/td>
&lt;td>Western Digital Blue: 6TB, Green: 3×2TB (Western Digital Corporation)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="windowsos">WindowsOS&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">項目&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td>Windows 11 Pro (64bit)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal&lt;/td>
&lt;td>Windows Console&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal Font&lt;/td>
&lt;td>FiraCode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Shell&lt;/td>
&lt;td>PowerShell v7.1.4&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="linux-1">Linux (1)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">項目&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td>Manjaro Linux x86_64&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal&lt;/td>
&lt;td>xfce4-terminal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal Font&lt;/td>
&lt;td>FiraCode Nerd Font&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Shell&lt;/td>
&lt;td>zsh 5.8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="linux-2">Linux (2)&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">項目&lt;/th>
&lt;th>内容&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">OS&lt;/td>
&lt;td>MX x86_64&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal&lt;/td>
&lt;td>xfce4-terminal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Terminal Font&lt;/td>
&lt;td>Lilex Nerd Font Mono Medium&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Shell&lt;/td>
&lt;td>zsh 5.8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>俺の Spotify プレイリスト</title><link>https://example.com/p/%E4%BF%BA%E3%81%AE-spotify-%E3%83%97%E3%83%AC%E3%82%A4%E3%83%AA%E3%82%B9%E3%83%88/</link><pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate><guid>https://example.com/p/%E4%BF%BA%E3%81%AE-spotify-%E3%83%97%E3%83%AC%E3%82%A4%E3%83%AA%E3%82%B9%E3%83%88/</guid><description>&lt;img src="https://example.com/p/%E4%BF%BA%E3%81%AE-spotify-%E3%83%97%E3%83%AC%E3%82%A4%E3%83%AA%E3%82%B9%E3%83%88/featured-image.webp" alt="Featured image of post 俺の Spotify プレイリスト" />&lt;p>以下のプレイリストを現在、作成しています.&lt;/p>
&lt;p>TPO に合わせて様々なジャンルの音楽をお楽しみ下さい.&lt;/p>
&lt;h2 id="j-hiphop">J-HipHop&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/6yxUFe1L8jVJYRBdzOxjR9?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="j-hiphop-chill">J-HipHop (Chill)&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/1aodMOvVeRuQVbsKbq3U24?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="hiphop">HipHop&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/7J5jt1NuypGT9GVcOWvurm?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="j-rock">J-Rock&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/1HxwFI4aT2RgH7pSm8vkOK?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="rock">Rock&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/3WPRcGLvRcH4OYEy7LnkeL?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="dubstep-bass">Dubstep, Bass&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/3V0mWacQReAtxLDf3d6gwr?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="kawaii">Kawaii&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/08hsQQk9DMDy4HKWlWly7b?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="house">House&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/1sk5P39ProLrivFWPMExMZ?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe>
&lt;h2 id="edm">EDM&lt;/h2>
&lt;iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/24kQslZuR3ZNnvYQiYn6P8?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture">&lt;/iframe></description></item></channel></rss>